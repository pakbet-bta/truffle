{
  "contractName": "PakbetCertificate",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "students",
      "outputs": [
        {
          "name": "blockChainAccount",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "issuers",
      "outputs": [
        {
          "name": "active",
          "type": "bool"
        },
        {
          "name": "name",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "certificates",
      "outputs": [
        {
          "name": "issuedTo",
          "type": "uint256"
        },
        {
          "name": "issuedBy",
          "type": "uint256"
        },
        {
          "name": "templateUsed",
          "type": "uint256"
        },
        {
          "name": "date",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_title",
          "type": "string"
        },
        {
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "createTemplate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_issuerAddress",
          "type": "address"
        },
        {
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "accreditIssuer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "templates",
      "outputs": [
        {
          "name": "createdBy",
          "type": "address"
        },
        {
          "name": "title",
          "type": "string"
        },
        {
          "name": "description",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "deActivateIssuerById",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getIssuedTemplates",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "reActivateIssuerById",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "issuerAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "title",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "description",
          "type": "string"
        }
      ],
      "name": "NewTemplate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "hashCode",
          "type": "bytes32"
        }
      ],
      "name": "NewCertificate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "hashCode",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "student",
          "type": "address"
        }
      ],
      "name": "NewPremiumCertificate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "issuerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "name",
          "type": "string"
        }
      ],
      "name": "NewIssuer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "student",
          "type": "address"
        }
      ],
      "name": "NewStudent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_hashCode",
          "type": "bytes32"
        }
      ],
      "name": "awardRegularCertificate",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_hashCode",
          "type": "bytes32"
        }
      ],
      "name": "validateRegularCertificate",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_templateId",
          "type": "uint256"
        },
        {
          "name": "_hashCode",
          "type": "bytes32"
        },
        {
          "name": "_studentAddress",
          "type": "address"
        }
      ],
      "name": "awardPublicCertificates",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"students\",\"outputs\":[{\"name\":\"blockChainAccount\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_hashCode\",\"type\":\"bytes32\"}],\"name\":\"awardRegularCertificate\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"issuers\",\"outputs\":[{\"name\":\"active\",\"type\":\"bool\"},{\"name\":\"name\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"certificates\",\"outputs\":[{\"name\":\"issuedTo\",\"type\":\"uint256\"},{\"name\":\"issuedBy\",\"type\":\"uint256\"},{\"name\":\"templateUsed\",\"type\":\"uint256\"},{\"name\":\"date\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_title\",\"type\":\"string\"},{\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"createTemplate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_hashCode\",\"type\":\"bytes32\"}],\"name\":\"validateRegularCertificate\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_templateId\",\"type\":\"uint256\"},{\"name\":\"_hashCode\",\"type\":\"bytes32\"},{\"name\":\"_studentAddress\",\"type\":\"address\"}],\"name\":\"awardPublicCertificates\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_issuerAddress\",\"type\":\"address\"},{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"accreditIssuer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"templates\",\"outputs\":[{\"name\":\"createdBy\",\"type\":\"address\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"deActivateIssuerById\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getIssuedTemplates\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"reActivateIssuerById\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"issuerAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"title\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"description\",\"type\":\"string\"}],\"name\":\"NewTemplate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"hashCode\",\"type\":\"bytes32\"}],\"name\":\"NewCertificate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"hashCode\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"student\",\"type\":\"address\"}],\"name\":\"NewPremiumCertificate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"issuerId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"}],\"name\":\"NewIssuer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"student\",\"type\":\"address\"}],\"name\":\"NewStudent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"accreditIssuer(address,string)\":{\"details\":\"Only the owner of the smart contract account can call this function. \\r\",\"params\":{\"_issuerAddress\":\"Blockchain Address associated to the training institution.\\r\",\"_name\":\"Name of the training institution.\\r\"}},\"awardPublicCertificates(uint256,bytes32,address)\":{\"params\":{\"_hashCode\":\"the resulting value when pdf is hashed.\\r\",\"_studentAddress\":\"Blockchain Address associated to the student.\\r\",\"_templateId\":\"uint256 value corresponding to the index position of template in the templates[] array.\\r\"}},\"awardRegularCertificate(bytes32)\":{\"details\":\"Record the hash value of the pdf document to the blockchain account.\\r\",\"params\":{\"_hashCode\":\"the resulting value when pdf is hashed.\\r\"},\"return\":\"true if awarding of certificate is good, false if awarding of certificate fails.\\r\"},\"createTemplate(string,string)\":{\"details\":\"Only account in the issuer[] array can call this function.\\r\",\"params\":{\"_description\":\"certificate description e.g. BTA Expert Program\\r\",\"_title\":\"certificate description e.g. Certificate of Attendance.\\r\"}},\"deActivateIssuerById(uint256)\":{\"params\":{\"_index\":\"uint256 value corresponding to the index position of the training institution\\r in the issuers[] array.\\r\"}},\"getIssuedTemplates(uint256)\":{\"params\":{\"_id\":\"uint256 value corresponding to the index position of the training institution\\r\"},\"return\":\"an array containing the template ids created template by the institution \\r\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\\r\"},\"owner()\":{\"return\":\"the address of the owner.\\r\"},\"reActivateIssuerById(uint256)\":{\"params\":{\"_index\":\"uint256 value corresponding to the index position of the training institution\\r in the issuers[] array.\\r\"}},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\\r\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\\r\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\\r\"}},\"validateRegularCertificate(bytes32)\":{\"params\":{\"_hashCode\":\"the resulting value when pdf is hashed.\\r\"},\"return\":\"true if Certificate exist in the blockchain, false if not.\\r\"}}},\"userdoc\":{\"methods\":{\"accreditIssuer(address,string)\":{\"notice\":\"Add training institution to the blockchain.\\r\"},\"awardRegularCertificate(bytes32)\":{\"notice\":\"Only accredited account can call this function.\\r\"},\"createTemplate(string,string)\":{\"notice\":\"Creates blank certificates which will become basis for certificates\\r to be issued.\\r\"},\"deActivateIssuerById(uint256)\":{\"notice\":\"Prevent a training institution from creating and awarding certificates.\\r\"},\"reActivateIssuerById(uint256)\":{\"notice\":\"Allows a training institution from creating and awarding certificates.\\r\"},\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner.\\r It will not be possible to call the functions with the `onlyOwner`\\r modifier anymore.\\r\"}}}},\"settings\":{\"compilationTarget\":{\"/D/ethereum/pakbet/contracts/PakbetCertificate.sol\":\"PakbetCertificate\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/ethereum/pakbet/contracts/PakbetCertificate.sol\":{\"keccak256\":\"0x2939734a1e6705a2fd296dd51cd9d3ed55ff1e5b6e8fd6609b12d8a48b5132f3\",\"urls\":[\"bzzr://d2ba999d7715b8fe807a9bc574b92cb3833d9d893fd7a5397836ff48bf0f3ed9\"]},\"/D/ethereum/pakbet/contracts/PakbetIssuer.sol\":{\"keccak256\":\"0x834f4faf5de6f6ff9ecae34fb16bd3b2f49c8dfc167804e22cafed2db46d7bc6\",\"urls\":[\"bzzr://d4b48fe4e9a956acb24c3a7c833efe86e2da9c021725749c2911ce1012f1ed88\"]},\"/D/ethereum/pakbet/contracts/PakbetTemplate.sol\":{\"keccak256\":\"0xbbc328f8db84d8557ea49add9118aa0c3087c65f48e18432ba6464260f51207a\",\"urls\":[\"bzzr://e19b2af69f2ebfbc4765567e325558c983d9e583dbddc0e9bd91d48d5e90c176\"]},\"/D/ethereum/pakbet/contracts/PakbetUsecase.sol\":{\"keccak256\":\"0x0e5a31165ad9dcf594a2364c4683d9afe8798d138421cd5dad0afa92775b3b29\",\"urls\":[\"bzzr://a01e273a676916731946b191dc5bfa400f1b4246227d16a378410a5a888c696c\"]},\"/D/ethereum/pakbet/contracts/ownable.sol\":{\"keccak256\":\"0x585a2f025ee234e642ac3dff65fd66bf8a69e80a60f0948f89e919bd30dfdf43\",\"urls\":[\"bzzr://a365be6631b4b7206e401551b60251340e2383968f505b1502c095a4544e15cd\"]}},\"version\":1}",
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3611f86806100cf6000396000f3fe6080604052600436106100e6576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306ead22e146100eb57806352a8f2711461016657806361ec30c4146101b9578063663b3e22146102785780636aeae837146102e8578063715018a6146103c35780638da5cb5b146103da5780638f32d59b1461043157806392f0ae861461046057806397ded1b0146104b3578063a4d68d7514610518578063bc525652146105be578063c01ff84c14610711578063e5f5a1461461074c578063e97c147b146107dc578063f2fde38b14610817575b600080fd5b3480156100f757600080fd5b506101246004803603602081101561010e57600080fd5b8101908080359060200190929190505050610868565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561017257600080fd5b5061019f6004803603602081101561018957600080fd5b81019080803590602001909291905050506108b5565b604051808215151515815260200191505060405180910390f35b3480156101c557600080fd5b506101f2600480360360208110156101dc57600080fd5b8101908080359060200190929190505050610a28565b604051808315151515815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561023c578082015181840152602081019050610221565b50505050905090810190601f1680156102695780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b34801561028457600080fd5b506102b16004803603602081101561029b57600080fd5b8101908080359060200190929190505050610b00565b604051808581526020018481526020018381526020018263ffffffff1663ffffffff16815260200194505050505060405180910390f35b3480156102f457600080fd5b506103c16004803603604081101561030b57600080fd5b810190808035906020019064010000000081111561032857600080fd5b82018360208201111561033a57600080fd5b8035906020019184600183028401116401000000008311171561035c57600080fd5b90919293919293908035906020019064010000000081111561037d57600080fd5b82018360208201111561038f57600080fd5b803590602001918460018302840111640100000000831117156103b157600080fd5b9091929391929390505050610b4f565b005b3480156103cf57600080fd5b506103d8610dbd565b005b3480156103e657600080fd5b506103ef610e8f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561043d57600080fd5b50610446610eb8565b604051808215151515815260200191505060405180910390f35b34801561046c57600080fd5b506104996004803603602081101561048357600080fd5b8101908080359060200190929190505050610f0f565b604051808215151515815260200191505060405180910390f35b3480156104bf57600080fd5b50610516600480360360608110156104d657600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f61565b005b34801561052457600080fd5b506105bc6004803603604081101561053b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561057857600080fd5b82018360208201111561058a57600080fd5b803590602001918460018302840111640100000000831117156105ac57600080fd5b909192939192939050505061128d565b005b3480156105ca57600080fd5b506105f7600480360360208110156105e157600080fd5b81019080803590602001909291905050506112f3565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101561066d578082015181840152602081019050610652565b50505050905090810190601f16801561069a5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156106d35780820151818401526020810190506106b8565b50505050905090810190601f1680156107005780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b34801561071d57600080fd5b5061074a6004803603602081101561073457600080fd5b810190808035906020019092919050505061147c565b005b34801561075857600080fd5b506107856004803603602081101561076f57600080fd5b8101908080359060200190929190505050611504565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156107c85780820151818401526020810190506107ad565b505050509050019250505060405180910390f35b3480156107e857600080fd5b50610815600480360360208110156107ff57600080fd5b810190808035906020019092919050505061161f565b005b34801561082357600080fd5b506108666004803603602081101561083a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116a8565b005b60038181548110151561087757fe5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081565b6000336000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561095457600080fd5b60028181548110151561096357fe5b906000526020600020906003020160000160009054906101000a900460ff16151561098d57600080fd5b600c600085815260200190815260200160002060009054906101000a900460ff161515156109ba57600080fd5b6001600c600086815260200190815260200160002060006101000a81548160ff0219169083151502179055507f35445dd7684af4d0b1828f42019bd59ce22b71771e931983dfe04d5eb270afd8846040518082815260200191505060405180910390a1600192505050919050565b600281815481101515610a3757fe5b90600052602060002090600302016000915090508060000160009054906101000a900460ff1690806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610af65780601f10610acb57610100808354040283529160200191610af6565b820191906000526020600020905b815481529060010190602001808311610ad957829003601f168201915b5050505050905082565b600181815481101515610b0f57fe5b90600052602060002090600402016000915090508060000154908060010154908060020154908060030160009054906101000a900463ffffffff16905084565b33600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610ba857600080fd5b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600086868686600286815481101515610c0157fe5b9060005260206000209060030201600101604051602001808060200180602001806020018481038452898982818152602001925080828437600081840152601f19601f8201169050808301925050508481038352878782818152602001925080828437600081840152601f19601f820116905080830192505050848103825285818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015610cfc5780601f10610cd157610100808354040283529160200191610cfc565b820191906000526020600020905b815481529060010190602001808311610cdf57829003601f168201915b505098505050505050505050604051602081830303815290604052805190602001209050610db43388888080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505087878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050846116c7565b50505050505050565b610dc5610eb8565b1515610dd057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000600c600083815260200190815260200160002060009054906101000a900460ff1680610f5a5750600b600083815260200190815260200160002060009054906101000a900460ff165b9050919050565b33600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610fba57600080fd5b60048054905084101515610fcd57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16600485815481101515610ff357fe5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561104757600080fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561109f57600080fd5b600b600084815260200190815260200160002060009054906101000a900460ff161515156110cc57600080fd5b6000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006001806080604051908101604052808681526020018581526020018a81526020014263ffffffff168152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548163ffffffff021916908363ffffffff16021790555050500390506001600b600088815260200190815260200160002060006101000a81548160ff02191690831515021790555080600960008881526020019081526020016000208190555060038381548110151561124957fe5b906000526020600020906002020160010181908060018154018082558091505090600182039060005260206000200160009091929091909150555050505050505050565b611295610eb8565b15156112a057600080fd5b6112ee8383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611a0f565b505050565b60048181548110151561130257fe5b90600052602060002090600302016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113d45780601f106113a9576101008083540402835291602001916113d4565b820191906000526020600020905b8154815290600101906020018083116113b757829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114725780601f1061144757610100808354040283529160200191611472565b820191906000526020600020905b81548152906001019060200180831161145557829003601f168201915b5050505050905083565b611484610eb8565b151561148f57600080fd5b60028181548110151561149e57fe5b906000526020600020906003020160000160009054906101000a900460ff1615156114c857600080fd5b60006002828154811015156114d957fe5b906000526020600020906003020160000160006101000a81548160ff02191690831515021790555050565b606061150e610eb8565b151561151957600080fd5b6002805490508210151561152c57600080fd5b606060028381548110151561153d57fe5b9060005260206000209060030201600201805490506040519080825280602002602001820160405280156115805781602001602082028038833980820191505090505b50905060008090505b60028481548110151561159857fe5b906000526020600020906003020160020180549050811015611615576002848154811015156115c357fe5b9060005260206000209060030201600201818154811015156115e157fe5b906000526020600020015482828151811015156115fa57fe5b90602001906020020181815250508080600101915050611589565b5080915050919050565b611627610eb8565b151561163257600080fd5b60028181548110151561164157fe5b906000526020600020906003020160000160009054906101000a900460ff1615151561166c57600080fd5b600160028281548110151561167d57fe5b906000526020600020906003020160000160006101000a81548160ff02191690831515021790555050565b6116b0610eb8565b15156116bb57600080fd5b6116c481611c35565b50565b80600a600082815260200190815260200160002060009054906101000a900460ff161515156116f557600080fd5b60006004805480919060010161170b9190611d2f565b90506000600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060028181548110151561176057fe5b906000526020600020906003020160000160009054906101000a900460ff16151561178a57600080fd5b8660048381548110151561179a57fe5b906000526020600020906003020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550856004838154811015156117f957fe5b9060005260206000209060030201600101908051906020019061181d929190611d61565b508460048381548110151561182e57fe5b90600052602060002090600302016002019080519060200190611852929190611d61565b5060028181548110151561186257fe5b90600052602060002090600302016002018290806001815401808255809150509060018203906000526020600020016000909192909190915055506001600a600086815260200190815260200160002060006101000a81548160ff0219169083151502179055507fcbb28b3e1f77d025889ab5d1e72a2eca69e6105bc36f0044122e59c55f40e18f878787604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015611963578082015181840152602081019050611948565b50505050905090810190601f1680156119905780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156119c95780820151818401526020810190506119ae565b50505050905090810190601f1680156119f65780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a150505050505050565b81600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515611a6957600080fd5b600060028054809190600101611a7f9190611de1565b90506001600282815481101515611a9257fe5b906000526020600020906003020160000160006101000a81548160ff02191690831515021790555082600282815481101515611aca57fe5b90600052602060002090600302016001019080519060200190611aee929190611d61565b506001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507faf49f6e647e48528a5c4c0a5801947007b7fa9744c066de10b2f7e747754bf1d81846040518083815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611bf4578082015181840152602081019050611bd9565b50505050905090810190601f168015611c215780820380516001836020036101000a031916815260200191505b50935050505060405180910390a150505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611c7157600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b815481835581811115611d5c57600302816003028360005260206000209182019101611d5b9190611e13565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611da257805160ff1916838001178555611dd0565b82800160010185558215611dd0579182015b82811115611dcf578251825591602001919060010190611db4565b5b509050611ddd9190611e79565b5090565b815481835581811115611e0e57600302816003028360005260206000209182019101611e0d9190611e9e565b5b505050565b611e7691905b80821115611e7257600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000611e599190611ef1565b600282016000611e699190611ef1565b50600301611e19565b5090565b90565b611e9b91905b80821115611e97576000816000905550600101611e7f565b5090565b90565b611eee91905b80821115611eea57600080820160006101000a81549060ff0219169055600182016000611ed19190611ef1565b600282016000611ee19190611f39565b50600301611ea4565b5090565b90565b50805460018160011615610100020316600290046000825580601f10611f175750611f36565b601f016020900490600052602060002090810190611f359190611e79565b5b50565b5080546000825590600052602060002090810190611f579190611e79565b5056fea165627a7a72305820a5770104ede266fcce233f307c7f6850ee8e7ce6a9e5d1f281196e51cff606880029",
  "deployedBytecode": "0x6080604052600436106100e6576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306ead22e146100eb57806352a8f2711461016657806361ec30c4146101b9578063663b3e22146102785780636aeae837146102e8578063715018a6146103c35780638da5cb5b146103da5780638f32d59b1461043157806392f0ae861461046057806397ded1b0146104b3578063a4d68d7514610518578063bc525652146105be578063c01ff84c14610711578063e5f5a1461461074c578063e97c147b146107dc578063f2fde38b14610817575b600080fd5b3480156100f757600080fd5b506101246004803603602081101561010e57600080fd5b8101908080359060200190929190505050610868565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561017257600080fd5b5061019f6004803603602081101561018957600080fd5b81019080803590602001909291905050506108b5565b604051808215151515815260200191505060405180910390f35b3480156101c557600080fd5b506101f2600480360360208110156101dc57600080fd5b8101908080359060200190929190505050610a28565b604051808315151515815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561023c578082015181840152602081019050610221565b50505050905090810190601f1680156102695780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b34801561028457600080fd5b506102b16004803603602081101561029b57600080fd5b8101908080359060200190929190505050610b00565b604051808581526020018481526020018381526020018263ffffffff1663ffffffff16815260200194505050505060405180910390f35b3480156102f457600080fd5b506103c16004803603604081101561030b57600080fd5b810190808035906020019064010000000081111561032857600080fd5b82018360208201111561033a57600080fd5b8035906020019184600183028401116401000000008311171561035c57600080fd5b90919293919293908035906020019064010000000081111561037d57600080fd5b82018360208201111561038f57600080fd5b803590602001918460018302840111640100000000831117156103b157600080fd5b9091929391929390505050610b4f565b005b3480156103cf57600080fd5b506103d8610dbd565b005b3480156103e657600080fd5b506103ef610e8f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561043d57600080fd5b50610446610eb8565b604051808215151515815260200191505060405180910390f35b34801561046c57600080fd5b506104996004803603602081101561048357600080fd5b8101908080359060200190929190505050610f0f565b604051808215151515815260200191505060405180910390f35b3480156104bf57600080fd5b50610516600480360360608110156104d657600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f61565b005b34801561052457600080fd5b506105bc6004803603604081101561053b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561057857600080fd5b82018360208201111561058a57600080fd5b803590602001918460018302840111640100000000831117156105ac57600080fd5b909192939192939050505061128d565b005b3480156105ca57600080fd5b506105f7600480360360208110156105e157600080fd5b81019080803590602001909291905050506112f3565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101561066d578082015181840152602081019050610652565b50505050905090810190601f16801561069a5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156106d35780820151818401526020810190506106b8565b50505050905090810190601f1680156107005780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b34801561071d57600080fd5b5061074a6004803603602081101561073457600080fd5b810190808035906020019092919050505061147c565b005b34801561075857600080fd5b506107856004803603602081101561076f57600080fd5b8101908080359060200190929190505050611504565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156107c85780820151818401526020810190506107ad565b505050509050019250505060405180910390f35b3480156107e857600080fd5b50610815600480360360208110156107ff57600080fd5b810190808035906020019092919050505061161f565b005b34801561082357600080fd5b506108666004803603602081101561083a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116a8565b005b60038181548110151561087757fe5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081565b6000336000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561095457600080fd5b60028181548110151561096357fe5b906000526020600020906003020160000160009054906101000a900460ff16151561098d57600080fd5b600c600085815260200190815260200160002060009054906101000a900460ff161515156109ba57600080fd5b6001600c600086815260200190815260200160002060006101000a81548160ff0219169083151502179055507f35445dd7684af4d0b1828f42019bd59ce22b71771e931983dfe04d5eb270afd8846040518082815260200191505060405180910390a1600192505050919050565b600281815481101515610a3757fe5b90600052602060002090600302016000915090508060000160009054906101000a900460ff1690806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610af65780601f10610acb57610100808354040283529160200191610af6565b820191906000526020600020905b815481529060010190602001808311610ad957829003601f168201915b5050505050905082565b600181815481101515610b0f57fe5b90600052602060002090600402016000915090508060000154908060010154908060020154908060030160009054906101000a900463ffffffff16905084565b33600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610ba857600080fd5b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600086868686600286815481101515610c0157fe5b9060005260206000209060030201600101604051602001808060200180602001806020018481038452898982818152602001925080828437600081840152601f19601f8201169050808301925050508481038352878782818152602001925080828437600081840152601f19601f820116905080830192505050848103825285818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015610cfc5780601f10610cd157610100808354040283529160200191610cfc565b820191906000526020600020905b815481529060010190602001808311610cdf57829003601f168201915b505098505050505050505050604051602081830303815290604052805190602001209050610db43388888080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505087878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050846116c7565b50505050505050565b610dc5610eb8565b1515610dd057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000600c600083815260200190815260200160002060009054906101000a900460ff1680610f5a5750600b600083815260200190815260200160002060009054906101000a900460ff165b9050919050565b33600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610fba57600080fd5b60048054905084101515610fcd57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16600485815481101515610ff357fe5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561104757600080fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561109f57600080fd5b600b600084815260200190815260200160002060009054906101000a900460ff161515156110cc57600080fd5b6000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006001806080604051908101604052808681526020018581526020018a81526020014263ffffffff168152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548163ffffffff021916908363ffffffff16021790555050500390506001600b600088815260200190815260200160002060006101000a81548160ff02191690831515021790555080600960008881526020019081526020016000208190555060038381548110151561124957fe5b906000526020600020906002020160010181908060018154018082558091505090600182039060005260206000200160009091929091909150555050505050505050565b611295610eb8565b15156112a057600080fd5b6112ee8383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611a0f565b505050565b60048181548110151561130257fe5b90600052602060002090600302016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113d45780601f106113a9576101008083540402835291602001916113d4565b820191906000526020600020905b8154815290600101906020018083116113b757829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114725780601f1061144757610100808354040283529160200191611472565b820191906000526020600020905b81548152906001019060200180831161145557829003601f168201915b5050505050905083565b611484610eb8565b151561148f57600080fd5b60028181548110151561149e57fe5b906000526020600020906003020160000160009054906101000a900460ff1615156114c857600080fd5b60006002828154811015156114d957fe5b906000526020600020906003020160000160006101000a81548160ff02191690831515021790555050565b606061150e610eb8565b151561151957600080fd5b6002805490508210151561152c57600080fd5b606060028381548110151561153d57fe5b9060005260206000209060030201600201805490506040519080825280602002602001820160405280156115805781602001602082028038833980820191505090505b50905060008090505b60028481548110151561159857fe5b906000526020600020906003020160020180549050811015611615576002848154811015156115c357fe5b9060005260206000209060030201600201818154811015156115e157fe5b906000526020600020015482828151811015156115fa57fe5b90602001906020020181815250508080600101915050611589565b5080915050919050565b611627610eb8565b151561163257600080fd5b60028181548110151561164157fe5b906000526020600020906003020160000160009054906101000a900460ff1615151561166c57600080fd5b600160028281548110151561167d57fe5b906000526020600020906003020160000160006101000a81548160ff02191690831515021790555050565b6116b0610eb8565b15156116bb57600080fd5b6116c481611c35565b50565b80600a600082815260200190815260200160002060009054906101000a900460ff161515156116f557600080fd5b60006004805480919060010161170b9190611d2f565b90506000600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060028181548110151561176057fe5b906000526020600020906003020160000160009054906101000a900460ff16151561178a57600080fd5b8660048381548110151561179a57fe5b906000526020600020906003020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550856004838154811015156117f957fe5b9060005260206000209060030201600101908051906020019061181d929190611d61565b508460048381548110151561182e57fe5b90600052602060002090600302016002019080519060200190611852929190611d61565b5060028181548110151561186257fe5b90600052602060002090600302016002018290806001815401808255809150509060018203906000526020600020016000909192909190915055506001600a600086815260200190815260200160002060006101000a81548160ff0219169083151502179055507fcbb28b3e1f77d025889ab5d1e72a2eca69e6105bc36f0044122e59c55f40e18f878787604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015611963578082015181840152602081019050611948565b50505050905090810190601f1680156119905780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156119c95780820151818401526020810190506119ae565b50505050905090810190601f1680156119f65780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a150505050505050565b81600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515611a6957600080fd5b600060028054809190600101611a7f9190611de1565b90506001600282815481101515611a9257fe5b906000526020600020906003020160000160006101000a81548160ff02191690831515021790555082600282815481101515611aca57fe5b90600052602060002090600302016001019080519060200190611aee929190611d61565b506001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507faf49f6e647e48528a5c4c0a5801947007b7fa9744c066de10b2f7e747754bf1d81846040518083815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611bf4578082015181840152602081019050611bd9565b50505050905090810190601f168015611c215780820380516001836020036101000a031916815260200191505b50935050505060405180910390a150505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611c7157600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b815481835581811115611d5c57600302816003028360005260206000209182019101611d5b9190611e13565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611da257805160ff1916838001178555611dd0565b82800160010185558215611dd0579182015b82811115611dcf578251825591602001919060010190611db4565b5b509050611ddd9190611e79565b5090565b815481835581811115611e0e57600302816003028360005260206000209182019101611e0d9190611e9e565b5b505050565b611e7691905b80821115611e7257600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000611e599190611ef1565b600282016000611e699190611ef1565b50600301611e19565b5090565b90565b611e9b91905b80821115611e97576000816000905550600101611e7f565b5090565b90565b611eee91905b80821115611eea57600080820160006101000a81549060ff0219169055600182016000611ed19190611ef1565b600282016000611ee19190611f39565b50600301611ea4565b5090565b90565b50805460018160011615610100020316600290046000825580601f10611f175750611f36565b601f016020900490600052602060002090810190611f359190611e79565b5b50565b5080546000825590600052602060002090810190611f579190611e79565b5056fea165627a7a72305820a5770104ede266fcce233f307c7f6850ee8e7ce6a9e5d1f281196e51cff606880029",
  "sourceMap": "59:2120:1:-;;;528:10:6;519:6;;:19;;;;;;;;;;;;;;;;;;583:6;;;;;;;;;;;550:40;;579:1;550:40;;;;;;;;;;;;59:2120:1;;;;;;",
  "deployedSourceMap": "59:2120:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:25:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;947:25:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;947:25:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;445:266:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;445:266:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;445:266:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;917:23:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;917:23:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;917:23:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;917:23:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;877:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;877:33:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;877:33:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;462:338:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;462:338:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;462:338:4;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;462:338:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;462:338:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;462:338:4;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;462:338:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;462:338:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;462:338:4;;;;;;;;;;;;;;;1304:130:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1304:130:6;;;;;;654:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;654:72:6;;;;;;;;;;;;;;;;;;;;;;;;;;;952:85;;8:9:-1;5:2;;;30:1;27;20:12;5:2;952:85:6;;;;;;;;;;;;;;;;;;;;;;;;;;;881:175:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;881:175:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;881:175:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1344:832;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1344:832:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1344:832:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;413:147:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;413:147:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;413:147:2;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;413:147:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;413:147:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;413:147:2;;;;;;;;;;;;;;;979:27:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;979:27:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;979:27:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;979:27:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;979:27:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;811:156:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;811:156:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;811:156:2;;;;;;;;;;;;;;;;;;;;1020:407:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1020:407:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1020:407:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1020:407:4;;;;;;;;;;;;;;;;;1213:156:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1213:156:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1213:156:2;;;;;;;;;;;;;;;;;;;;1598:103:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1598:103:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1598:103:6;;;;;;;;;;;;;;;;;;;;;;947:25:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;445:266:1:-;535:4;515:10;2006:13:5;2022:15;:24;2038:7;2022:24;;;;;;;;;;;;;;;;2006:40;;2075:17;:26;2093:7;2075:26;;;;;;;;;;;;;;;;;;;;;;;;;2067:35;;;;;;;;2122:7;2130:5;2122:14;;;;;;;;;;;;;;;;;;;;:21;;;;;;;;;;;;2113:31;;;;;;;;561:19:1;:30;581:9;561:30;;;;;;;;;;;;;;;;;;;;;560:31;552:40;;;;;;;;636:4;603:19;:30;623:9;603:30;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;656:25;671:9;656:25;;;;;;;;;;;;;;;;;;699:4;692:11;;445:266;;;;;:::o;917:23:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;877:33::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;462:338:4:-;562:10;1636:17:5;:33;1654:14;1636:33;;;;;;;;;;;;;;;;;;;;;;;;;1628:42;;;;;;;;585:13:4;601:15;:27;617:10;601:27;;;;;;;;;;;;;;;;585:43;;639:16;679:6;;687:12;;701:7;709:5;701:14;;;;;;;;;;;;;;;;;;;;:19;;668:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;668:53:4;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;668:53:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;668:53:4;;;658:64;;;;;;639:83;;733:59;749:10;761:6;;733:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;733:59:4;;;;;;769:12;;733:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;733:59:4;;;;;;783:8;733:15;:59::i;:::-;1681:1:5;;462:338:4;;;;;:::o;1304:130:6:-;845:9;:7;:9::i;:::-;837:18;;;;;;;;1399:1;1362:40;;1383:6;;;;;;;;;;;1362:40;;;;;;;;;;;;1426:1;1409:6;;:19;;;;;;;;;;;;;;;;;;1304:130::o;654:72::-;691:7;714:6;;;;;;;;;;;707:13;;654:72;:::o;952:85::-;991:4;1025:6;;;;;;;;;;;1011:20;;:10;:20;;;1004:27;;952:85;:::o;881:175:1:-;958:4;983:19;:30;1003:9;983:30;;;;;;;;;;;;;;;;;;;;;:64;;;;1017:19;:30;1037:9;1017:30;;;;;;;;;;;;;;;;;;;;;983:64;975:73;;881:175;;;:::o;1344:832::-;1510:10;1636:17:5;:33;1654:14;1636:33;;;;;;;;;;;;;;;;;;;;;;;;;1628:42;;;;;;;;1561:9:1;:16;;;;1547:11;:30;1539:39;;;;;;;;1633:10;1597:46;;:9;1607:11;1597:22;;;;;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;:46;;;1589:55;;;;;;;;1663:15;:32;1679:15;1663:32;;;;;;;;;;;;;;;;;;;;;;;;;1655:41;;;;;;;;1716:19;:30;1736:9;1716:30;;;;;;;;;;;;;;;;;;;;;1715:31;1707:40;;;;;;;;1768:20;1791:16;:33;1808:15;1791:33;;;;;;;;;;;;;;;;1768:56;;1835:19;1857:15;:27;1873:10;1857:27;;;;;;;;;;;;;;;;1835:49;;1905:10;2004:1;1918:12;1936:64;;;;;;;;;1948:12;1936:64;;;;1962:11;1936:64;;;;1975:11;1936:64;;;;1995:3;1936:64;;;;;1918:83;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1918:83:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:87;1905:100;;2049:4;2016:19;:30;2036:9;2016:30;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;2096:2;2064:18;:29;2083:9;2064:29;;;;;;;;;;;:34;;;;2119:8;2128:12;2119:22;;;;;;;;;;;;;;;;;;;;:40;;2165:2;2119:49;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2119:49:1;;;;;;;;;;;;;;;;;;;;;;1681:1:5;;;1344:832:1;;;;:::o;413:147:2:-;845:9:6;:7;:9::i;:::-;837:18;;;;;;;;514:38:2;530:14;546:5;;514:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;514:38:2;;;;;;:15;:38::i;:::-;413:147;;;:::o;979:27:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;811:156:2:-;845:9:6;:7;:9::i;:::-;837:18;;;;;;;;895:7:2;903:6;895:15;;;;;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;887:31;;;;;;;;954:5;929:7;937:6;929:15;;;;;;;;;;;;;;;;;;;;:22;;;:30;;;;;;;;;;;;;;;;;;811:156;:::o;1020:407:4:-;1093:16;845:9:6;:7;:9::i;:::-;837:18;;;;;;;;1137:7:4;:14;;;;1131:3;:20;1123:29;;;;;;;;1163:23;1203:7;1211:3;1203:12;;;;;;;;;;;;;;;;;;;;:29;;:36;;;;1189:51;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;1189:51:4;;;;1163:77;;1266:6;1275:1;1266:10;;1261:135;1282:7;1290:3;1282:12;;;;;;;;;;;;;;;;;;;;:29;;:36;;;;1278:1;:40;1261:135;;;1352:7;1360:3;1352:12;;;;;;;;;;;;;;;;;;;;:29;;1382:1;1352:32;;;;;;;;;;;;;;;;;;1340:6;1347:1;1340:9;;;;;;;;;;;;;;;;;:44;;;;;1320:3;;;;;;;1261:135;;;;1413:6;1406:13;;;1020:407;;;:::o;1213:156:2:-;845:9:6;:7;:9::i;:::-;837:18;;;;;;;;1298:7:2;1306:6;1298:15;;;;;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;1297:23;1289:32;;;;;;;;1357:4;1332:7;1340:6;1332:15;;;;;;;;;;;;;;;;;;;;:22;;;:29;;;;;;;;;;;;;;;;;;1213:156;:::o;1598:103:6:-;845:9;:7;:9::i;:::-;837:18;;;;;;;;1667:28;1686:8;1667:18;:28::i;:::-;1598:103;:::o;1435:680:4:-;1633:9;1772:17:5;:28;1790:9;1772:28;;;;;;;;;;;;;;;;;;;;;1771:29;1763:38;;;;;;;;1661:10:4;1674:9;:18;;;;;;;;;;;:::i;:::-;1661:31;;1703:13;1719:15;:25;1735:8;1719:25;;;;;;;;;;;;;;;;1703:41;;1774:7;1782:5;1774:14;;;;;;;;;;;;;;;;;;;;:21;;;;;;;;;;;;1765:31;;;;;;;;1843:8;1817:9;1827:2;1817:13;;;;;;;;;;;;;;;;;;;;:23;;;:34;;;;;;;;;;;;;;;;;;1884:6;1862:9;1872:2;1862:13;;;;;;;;;;;;;;;;;;;;:19;;:28;;;;;;;;;;;;:::i;:::-;;1929:12;1901:9;1911:2;1901:13;;;;;;;;;;;;;;;;;;;;:25;;:40;;;;;;;;;;;;:::i;:::-;;1962:7;1970:5;1962:14;;;;;;;;;;;;;;;;;;;;:31;;1999:2;1962:40;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1962:40:4;;;;;;;;;;;;;;;;;;;;;;2044:4;2013:17;:28;2031:9;2013:28;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;2064:43;2076:8;2086:6;2094:12;2064:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2064:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2064:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1812:1:5;;1435:680:4;;;;;:::o;1381:384:2:-;1476:14;1505:17:5;:33;1523:14;1505:33;;;;;;;;;;;;;;;;;;;;;;;;;1504:34;1496:43;;;;;;;;1503:10:2;1516:7;:16;;;;;;;;;;;:::i;:::-;1503:29;;1574:4;1553:7;1561:2;1553:11;;;;;;;;;;;;;;;;;;;;:18;;;:25;;;;;;;;;;;;;;;;;;1608:5;1589:7;1597:2;1589:11;;;;;;;;;;;;;;;;;;;;:16;;:24;;;;;;;;;;;;:::i;:::-;;1670:4;1634:17;:33;1652:14;1634:33;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1719:2;1685:15;:31;1701:14;1685:31;;;;;;;;;;;;;;;:36;;;;1737:20;1747:2;1751:5;1737:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1737:20:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1550:1:5;1381:384:2;;;:::o;1838:173:6:-;1928:1;1908:22;;:8;:22;;;;1900:31;;;;;;;;1972:8;1943:38;;1964:6;;;;;;;;;;;1943:38;;;;;;;;;;;;1997:8;1988:6;;:17;;;;;;;;;;;;;;;;;;1838:173;:::o;59:2120:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o",
  "source": "pragma solidity ^0.5.0;\r\nimport \"./PakbetTemplate.sol\";\r\n\r\ncontract PakbetCertificate is PakbetTemplate {\r\n    \r\n\r\n    /**\r\n     * @dev Record the hash value of the pdf document to the blockchain account.\r\n     * @notice Only accredited account can call this function.\r\n     * @return true if awarding of certificate is good, false if awarding of certificate fails.\r\n     * @param _hashCode the resulting value when pdf is hashed.\r\n     */\r\n    function awardRegularCertificate(bytes32 _hashCode) external canAward(msg.sender) returns(bool) {\r\n        require(!regularCertificates[_hashCode]);\r\n        regularCertificates[_hashCode] = true;\r\n        emit NewCertificate(_hashCode);\r\n        return true;\r\n    }\r\n    \r\n    /**\r\n     * @return true if Certificate exist in the blockchain, false if not.\r\n     * @param _hashCode the resulting value when pdf is hashed.\r\n     */\r\n    function validateRegularCertificate(bytes32 _hashCode) external view returns(bool) {\r\n        return (regularCertificates[_hashCode] || premiumCertificates[_hashCode]);\r\n    }\r\n    \r\n    /**\r\n     * @param _templateId uint256 value corresponding to the index position of template in the templates[] array.\r\n     * @param _hashCode the resulting value when pdf is hashed.\r\n     * @param _studentAddress Blockchain Address associated to the student.\r\n     */ \r\n    function awardPublicCertificates(\r\n        uint256 _templateId, \r\n        bytes32 _hashCode, \r\n        address _studentAddress\r\n    ) \r\n        external isAccredited(msg.sender) \r\n    {\r\n        require(_templateId < templates.length);\r\n        require(templates[_templateId].createdBy == msg.sender);\r\n        require(premiumStudents[_studentAddress]);\r\n        require(!premiumCertificates[_hashCode]);\r\n        \r\n        uint256 studentIndex = addressToStudent[_studentAddress];\r\n        uint256 issuerIndex = addressToIssuer[msg.sender];\r\n        \r\n        uint256 id = certificates.push(Certificate(studentIndex, issuerIndex, _templateId, uint32(now))) - 1;\r\n        premiumCertificates[_hashCode] = true;\r\n        bytesToCertificate[_hashCode] = id;\r\n        \r\n        students[studentIndex].certificatesOwned.push(id);\r\n    }\r\n}\r\n\r\n",
  "sourcePath": "D:\\ethereum\\pakbet\\contracts\\PakbetCertificate.sol",
  "ast": {
    "absolutePath": "/D/ethereum/pakbet/contracts/PakbetCertificate.sol",
    "exportedSymbols": {
      "PakbetCertificate": [
        203
      ]
    },
    "id": 204,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/D/ethereum/pakbet/contracts/PakbetTemplate.sol",
        "file": "./PakbetTemplate.sol",
        "id": 59,
        "nodeType": "ImportDirective",
        "scope": 204,
        "sourceUnit": 626,
        "src": "25:30:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 60,
              "name": "PakbetTemplate",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 625,
              "src": "89:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PakbetTemplate_$625",
                "typeString": "contract PakbetTemplate"
              }
            },
            "id": 61,
            "nodeType": "InheritanceSpecifier",
            "src": "89:14:1"
          }
        ],
        "contractDependencies": [
          317,
          625,
          810,
          919
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 203,
        "linearizedBaseContracts": [
          203,
          625,
          317,
          810,
          919
        ],
        "name": "PakbetCertificate",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 91,
              "nodeType": "Block",
              "src": "541:170:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "560:31:1",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 73,
                            "name": "regularCertificates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 734,
                            "src": "561:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 75,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 74,
                            "name": "_hashCode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63,
                            "src": "581:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "561:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 72,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1227,
                        1228
                      ],
                      "referencedDeclaration": 1227,
                      "src": "552:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "552:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "552:40:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 79,
                        "name": "regularCertificates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 734,
                        "src": "603:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 81,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 80,
                        "name": "_hashCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "623:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "603:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 82,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "636:4:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "603:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "603:37:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 86,
                        "name": "_hashCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "671:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 85,
                      "name": "NewCertificate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 642,
                      "src": "656:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "656:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88,
                  "nodeType": "EmitStatement",
                  "src": "651:30:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "699:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 71,
                  "id": 90,
                  "nodeType": "Return",
                  "src": "692:11:1"
                }
              ]
            },
            "documentation": "@dev Record the hash value of the pdf document to the blockchain account.\r\n@notice Only accredited account can call this function.\r\n@return true if awarding of certificate is good, false if awarding of certificate fails.\r\n@param _hashCode the resulting value when pdf is hashed.\r",
            "id": 92,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 66,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1224,
                      "src": "515:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "515:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 68,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 65,
                  "name": "canAward",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 809,
                  "src": "506:8:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "506:20:1"
              }
            ],
            "name": "awardRegularCertificate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "name": "_hashCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "478:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "478:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "477:19:1"
            },
            "returnParameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "535:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "535:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "534:6:1"
            },
            "scope": 203,
            "src": "445:266:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 108,
              "nodeType": "Block",
              "src": "964:92:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 99,
                            "name": "regularCertificates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 734,
                            "src": "983:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 101,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 100,
                            "name": "_hashCode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 94,
                            "src": "1003:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "983:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 102,
                            "name": "premiumCertificates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 730,
                            "src": "1017:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 104,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 103,
                            "name": "_hashCode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 94,
                            "src": "1037:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1017:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "983:64:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 106,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "982:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 98,
                  "id": 107,
                  "nodeType": "Return",
                  "src": "975:73:1"
                }
              ]
            },
            "documentation": "@return true if Certificate exist in the blockchain, false if not.\r\n@param _hashCode the resulting value when pdf is hashed.\r",
            "id": 109,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validateRegularCertificate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "name": "_hashCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "917:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "917:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "916:19:1"
            },
            "returnParameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "958:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "958:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "957:6:1"
            },
            "scope": 203,
            "src": "881:175:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 201,
              "nodeType": "Block",
              "src": "1528:648:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 123,
                          "name": "_templateId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 111,
                          "src": "1547:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 124,
                            "name": "templates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 702,
                            "src": "1561:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Template_$675_storage_$dyn_storage",
                              "typeString": "struct PakbetUseCase.Template storage ref[] storage ref"
                            }
                          },
                          "id": 125,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1561:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1547:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 122,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1227,
                        1228
                      ],
                      "referencedDeclaration": 1227,
                      "src": "1539:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1539:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "1539:39:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 130,
                              "name": "templates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 702,
                              "src": "1597:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Template_$675_storage_$dyn_storage",
                                "typeString": "struct PakbetUseCase.Template storage ref[] storage ref"
                              }
                            },
                            "id": 132,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 131,
                              "name": "_templateId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 111,
                              "src": "1607:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1597:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Template_$675_storage",
                              "typeString": "struct PakbetUseCase.Template storage ref"
                            }
                          },
                          "id": 133,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "createdBy",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 670,
                          "src": "1597:32:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 134,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1224,
                            "src": "1633:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1633:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1597:46:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 129,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1227,
                        1228
                      ],
                      "referencedDeclaration": 1227,
                      "src": "1589:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1589:55:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "1589:55:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 140,
                          "name": "premiumStudents",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 706,
                          "src": "1663:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 142,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 141,
                          "name": "_studentAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "1679:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1663:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 139,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1227,
                        1228
                      ],
                      "referencedDeclaration": 1227,
                      "src": "1655:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1655:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "1655:41:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1715:31:1",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 146,
                            "name": "premiumCertificates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 730,
                            "src": "1716:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 148,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 147,
                            "name": "_hashCode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 113,
                            "src": "1736:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1716:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 145,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1227,
                        1228
                      ],
                      "referencedDeclaration": 1227,
                      "src": "1707:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1707:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "1707:40:1"
                },
                {
                  "assignments": [
                    153
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 153,
                      "name": "studentIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 201,
                      "src": "1768:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 152,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1768:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 157,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 154,
                      "name": "addressToStudent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 718,
                      "src": "1791:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 156,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 155,
                      "name": "_studentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "1808:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1791:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1768:56:1"
                },
                {
                  "assignments": [
                    159
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 159,
                      "name": "issuerIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 201,
                      "src": "1835:19:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 158,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1835:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 164,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 160,
                      "name": "addressToIssuer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 714,
                      "src": "1857:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 163,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 161,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1224,
                        "src": "1873:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1873:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1857:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1835:49:1"
                },
                {
                  "assignments": [
                    166
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 166,
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "scope": 201,
                      "src": "1905:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 165,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1905:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 180,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 170,
                              "name": "studentIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 153,
                              "src": "1948:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 171,
                              "name": "issuerIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 159,
                              "src": "1962:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 172,
                              "name": "_templateId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 111,
                              "src": "1975:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 174,
                                  "name": "now",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1226,
                                  "src": "1995:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 173,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1988:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint32_$",
                                  "typeString": "type(uint32)"
                                },
                                "typeName": "uint32"
                              },
                              "id": 175,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1988:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 169,
                            "name": "Certificate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 684,
                            "src": "1936:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Certificate_$684_storage_ptr_$",
                              "typeString": "type(struct PakbetUseCase.Certificate storage pointer)"
                            }
                          },
                          "id": 176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1936:64:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Certificate_$684_memory",
                            "typeString": "struct PakbetUseCase.Certificate memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Certificate_$684_memory",
                            "typeString": "struct PakbetUseCase.Certificate memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 167,
                          "name": "certificates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 693,
                          "src": "1918:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Certificate_$684_storage_$dyn_storage",
                            "typeString": "struct PakbetUseCase.Certificate storage ref[] storage ref"
                          }
                        },
                        "id": 168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1918:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Certificate_$684_storage_$returns$_t_uint256_$",
                          "typeString": "function (struct PakbetUseCase.Certificate storage ref) returns (uint256)"
                        }
                      },
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1918:83:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2004:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1918:87:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1905:100:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 181,
                        "name": "premiumCertificates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 730,
                        "src": "2016:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 183,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 182,
                        "name": "_hashCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "2036:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2016:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2049:4:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2016:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "2016:37:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 187,
                        "name": "bytesToCertificate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 722,
                        "src": "2064:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 189,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 188,
                        "name": "_hashCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "2083:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2064:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 190,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "2096:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2064:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 192,
                  "nodeType": "ExpressionStatement",
                  "src": "2064:34:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 198,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "2165:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 193,
                            "name": "students",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 699,
                            "src": "2119:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Student_$690_storage_$dyn_storage",
                              "typeString": "struct PakbetUseCase.Student storage ref[] storage ref"
                            }
                          },
                          "id": 195,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 194,
                            "name": "studentIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 153,
                            "src": "2128:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2119:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Student_$690_storage",
                            "typeString": "struct PakbetUseCase.Student storage ref"
                          }
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "certificatesOwned",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 689,
                        "src": "2119:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2119:45:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2119:49:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "2119:49:1"
                }
              ]
            },
            "documentation": "@param _templateId uint256 value corresponding to the index position of template in the templates[] array.\r\n@param _hashCode the resulting value when pdf is hashed.\r\n@param _studentAddress Blockchain Address associated to the student.\r",
            "id": 202,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 118,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1224,
                      "src": "1510:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1510:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 120,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 117,
                  "name": "isAccredited",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 759,
                  "src": "1497:12:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1497:24:1"
              }
            ],
            "name": "awardPublicCertificates",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "name": "_templateId",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "1387:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1387:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 113,
                  "name": "_hashCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "1418:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1418:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 115,
                  "name": "_studentAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "1447:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1447:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1376:101:1"
            },
            "returnParameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1528:0:1"
            },
            "scope": 203,
            "src": "1344:832:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 204,
        "src": "59:2120:1"
      }
    ],
    "src": "0:2183:1"
  },
  "legacyAST": {
    "absolutePath": "/D/ethereum/pakbet/contracts/PakbetCertificate.sol",
    "exportedSymbols": {
      "PakbetCertificate": [
        203
      ]
    },
    "id": 204,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/D/ethereum/pakbet/contracts/PakbetTemplate.sol",
        "file": "./PakbetTemplate.sol",
        "id": 59,
        "nodeType": "ImportDirective",
        "scope": 204,
        "sourceUnit": 626,
        "src": "25:30:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 60,
              "name": "PakbetTemplate",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 625,
              "src": "89:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PakbetTemplate_$625",
                "typeString": "contract PakbetTemplate"
              }
            },
            "id": 61,
            "nodeType": "InheritanceSpecifier",
            "src": "89:14:1"
          }
        ],
        "contractDependencies": [
          317,
          625,
          810,
          919
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 203,
        "linearizedBaseContracts": [
          203,
          625,
          317,
          810,
          919
        ],
        "name": "PakbetCertificate",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 91,
              "nodeType": "Block",
              "src": "541:170:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "560:31:1",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 73,
                            "name": "regularCertificates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 734,
                            "src": "561:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 75,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 74,
                            "name": "_hashCode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63,
                            "src": "581:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "561:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 72,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1227,
                        1228
                      ],
                      "referencedDeclaration": 1227,
                      "src": "552:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "552:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "552:40:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 79,
                        "name": "regularCertificates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 734,
                        "src": "603:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 81,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 80,
                        "name": "_hashCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "623:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "603:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 82,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "636:4:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "603:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "603:37:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 86,
                        "name": "_hashCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "671:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 85,
                      "name": "NewCertificate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 642,
                      "src": "656:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "656:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88,
                  "nodeType": "EmitStatement",
                  "src": "651:30:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "699:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 71,
                  "id": 90,
                  "nodeType": "Return",
                  "src": "692:11:1"
                }
              ]
            },
            "documentation": "@dev Record the hash value of the pdf document to the blockchain account.\r\n@notice Only accredited account can call this function.\r\n@return true if awarding of certificate is good, false if awarding of certificate fails.\r\n@param _hashCode the resulting value when pdf is hashed.\r",
            "id": 92,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 66,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1224,
                      "src": "515:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "515:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 68,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 65,
                  "name": "canAward",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 809,
                  "src": "506:8:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "506:20:1"
              }
            ],
            "name": "awardRegularCertificate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "name": "_hashCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "478:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "478:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "477:19:1"
            },
            "returnParameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "535:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "535:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "534:6:1"
            },
            "scope": 203,
            "src": "445:266:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 108,
              "nodeType": "Block",
              "src": "964:92:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 99,
                            "name": "regularCertificates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 734,
                            "src": "983:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 101,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 100,
                            "name": "_hashCode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 94,
                            "src": "1003:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "983:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 102,
                            "name": "premiumCertificates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 730,
                            "src": "1017:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 104,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 103,
                            "name": "_hashCode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 94,
                            "src": "1037:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1017:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "983:64:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 106,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "982:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 98,
                  "id": 107,
                  "nodeType": "Return",
                  "src": "975:73:1"
                }
              ]
            },
            "documentation": "@return true if Certificate exist in the blockchain, false if not.\r\n@param _hashCode the resulting value when pdf is hashed.\r",
            "id": 109,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validateRegularCertificate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "name": "_hashCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "917:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "917:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "916:19:1"
            },
            "returnParameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "958:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "958:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "957:6:1"
            },
            "scope": 203,
            "src": "881:175:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 201,
              "nodeType": "Block",
              "src": "1528:648:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 123,
                          "name": "_templateId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 111,
                          "src": "1547:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 124,
                            "name": "templates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 702,
                            "src": "1561:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Template_$675_storage_$dyn_storage",
                              "typeString": "struct PakbetUseCase.Template storage ref[] storage ref"
                            }
                          },
                          "id": 125,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1561:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1547:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 122,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1227,
                        1228
                      ],
                      "referencedDeclaration": 1227,
                      "src": "1539:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1539:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "1539:39:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 130,
                              "name": "templates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 702,
                              "src": "1597:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Template_$675_storage_$dyn_storage",
                                "typeString": "struct PakbetUseCase.Template storage ref[] storage ref"
                              }
                            },
                            "id": 132,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 131,
                              "name": "_templateId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 111,
                              "src": "1607:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1597:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Template_$675_storage",
                              "typeString": "struct PakbetUseCase.Template storage ref"
                            }
                          },
                          "id": 133,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "createdBy",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 670,
                          "src": "1597:32:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 134,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1224,
                            "src": "1633:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1633:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1597:46:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 129,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1227,
                        1228
                      ],
                      "referencedDeclaration": 1227,
                      "src": "1589:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1589:55:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "1589:55:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 140,
                          "name": "premiumStudents",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 706,
                          "src": "1663:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 142,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 141,
                          "name": "_studentAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "1679:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1663:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 139,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1227,
                        1228
                      ],
                      "referencedDeclaration": 1227,
                      "src": "1655:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1655:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "1655:41:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1715:31:1",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 146,
                            "name": "premiumCertificates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 730,
                            "src": "1716:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 148,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 147,
                            "name": "_hashCode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 113,
                            "src": "1736:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1716:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 145,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1227,
                        1228
                      ],
                      "referencedDeclaration": 1227,
                      "src": "1707:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1707:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "1707:40:1"
                },
                {
                  "assignments": [
                    153
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 153,
                      "name": "studentIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 201,
                      "src": "1768:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 152,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1768:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 157,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 154,
                      "name": "addressToStudent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 718,
                      "src": "1791:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 156,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 155,
                      "name": "_studentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "1808:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1791:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1768:56:1"
                },
                {
                  "assignments": [
                    159
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 159,
                      "name": "issuerIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 201,
                      "src": "1835:19:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 158,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1835:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 164,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 160,
                      "name": "addressToIssuer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 714,
                      "src": "1857:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 163,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 161,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1224,
                        "src": "1873:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1873:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1857:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1835:49:1"
                },
                {
                  "assignments": [
                    166
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 166,
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "scope": 201,
                      "src": "1905:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 165,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1905:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 180,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 170,
                              "name": "studentIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 153,
                              "src": "1948:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 171,
                              "name": "issuerIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 159,
                              "src": "1962:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 172,
                              "name": "_templateId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 111,
                              "src": "1975:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 174,
                                  "name": "now",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1226,
                                  "src": "1995:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 173,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1988:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint32_$",
                                  "typeString": "type(uint32)"
                                },
                                "typeName": "uint32"
                              },
                              "id": 175,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1988:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 169,
                            "name": "Certificate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 684,
                            "src": "1936:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Certificate_$684_storage_ptr_$",
                              "typeString": "type(struct PakbetUseCase.Certificate storage pointer)"
                            }
                          },
                          "id": 176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1936:64:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Certificate_$684_memory",
                            "typeString": "struct PakbetUseCase.Certificate memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Certificate_$684_memory",
                            "typeString": "struct PakbetUseCase.Certificate memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 167,
                          "name": "certificates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 693,
                          "src": "1918:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Certificate_$684_storage_$dyn_storage",
                            "typeString": "struct PakbetUseCase.Certificate storage ref[] storage ref"
                          }
                        },
                        "id": 168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1918:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Certificate_$684_storage_$returns$_t_uint256_$",
                          "typeString": "function (struct PakbetUseCase.Certificate storage ref) returns (uint256)"
                        }
                      },
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1918:83:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2004:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1918:87:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1905:100:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 181,
                        "name": "premiumCertificates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 730,
                        "src": "2016:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 183,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 182,
                        "name": "_hashCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "2036:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2016:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2049:4:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2016:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "2016:37:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 187,
                        "name": "bytesToCertificate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 722,
                        "src": "2064:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 189,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 188,
                        "name": "_hashCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "2083:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2064:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 190,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "2096:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2064:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 192,
                  "nodeType": "ExpressionStatement",
                  "src": "2064:34:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 198,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "2165:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 193,
                            "name": "students",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 699,
                            "src": "2119:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Student_$690_storage_$dyn_storage",
                              "typeString": "struct PakbetUseCase.Student storage ref[] storage ref"
                            }
                          },
                          "id": 195,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 194,
                            "name": "studentIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 153,
                            "src": "2128:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2119:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Student_$690_storage",
                            "typeString": "struct PakbetUseCase.Student storage ref"
                          }
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "certificatesOwned",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 689,
                        "src": "2119:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2119:45:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2119:49:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "2119:49:1"
                }
              ]
            },
            "documentation": "@param _templateId uint256 value corresponding to the index position of template in the templates[] array.\r\n@param _hashCode the resulting value when pdf is hashed.\r\n@param _studentAddress Blockchain Address associated to the student.\r",
            "id": 202,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 118,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1224,
                      "src": "1510:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1510:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 120,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 117,
                  "name": "isAccredited",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 759,
                  "src": "1497:12:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1497:24:1"
              }
            ],
            "name": "awardPublicCertificates",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "name": "_templateId",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "1387:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1387:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 113,
                  "name": "_hashCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "1418:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1418:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 115,
                  "name": "_studentAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "1447:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1447:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1376:101:1"
            },
            "returnParameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1528:0:1"
            },
            "scope": 203,
            "src": "1344:832:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 204,
        "src": "59:2120:1"
      }
    ],
    "src": "0:2183:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0xcbb28b3e1f77d025889ab5d1e72a2eca69e6105bc36f0044122e59c55f40e18f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "issuerAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "title",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "description",
              "type": "string"
            }
          ],
          "name": "NewTemplate",
          "type": "event",
          "signature": "0xcbb28b3e1f77d025889ab5d1e72a2eca69e6105bc36f0044122e59c55f40e18f"
        },
        "0x35445dd7684af4d0b1828f42019bd59ce22b71771e931983dfe04d5eb270afd8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "hashCode",
              "type": "bytes32"
            }
          ],
          "name": "NewCertificate",
          "type": "event",
          "signature": "0x35445dd7684af4d0b1828f42019bd59ce22b71771e931983dfe04d5eb270afd8"
        },
        "0x1954ac83e537c0e756ec6df543e27af81f396a50b2f00ef7cc521308d3cba1f4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "hashCode",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "name": "student",
              "type": "address"
            }
          ],
          "name": "NewPremiumCertificate",
          "type": "event",
          "signature": "0x1954ac83e537c0e756ec6df543e27af81f396a50b2f00ef7cc521308d3cba1f4"
        },
        "0xaf49f6e647e48528a5c4c0a5801947007b7fa9744c066de10b2f7e747754bf1d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "issuerId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "name",
              "type": "string"
            }
          ],
          "name": "NewIssuer",
          "type": "event",
          "signature": "0xaf49f6e647e48528a5c4c0a5801947007b7fa9744c066de10b2f7e747754bf1d"
        },
        "0x76d881824e81c30f0d2ea36f999b13c9d258bc821dc2d29a17eb8ba7f95c275b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "student",
              "type": "address"
            }
          ],
          "name": "NewStudent",
          "type": "event",
          "signature": "0x76d881824e81c30f0d2ea36f999b13c9d258bc821dc2d29a17eb8ba7f95c275b"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        }
      },
      "links": {},
      "address": "0xc6b2c8227F2699582f4843492D09CF0f53123789",
      "transactionHash": "0x5733008447294055e7fa31e00f0d10f8cc739ec4df882f3cf2c7034b9894d46f"
    }
  },
  "schemaVersion": "3.0.18",
  "updatedAt": "2019-11-09T07:32:02.037Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "accreditIssuer(address,string)": {
        "details": "Only the owner of the smart contract account can call this function. \r",
        "params": {
          "_issuerAddress": "Blockchain Address associated to the training institution.\r",
          "_name": "Name of the training institution.\r"
        }
      },
      "awardPublicCertificates(uint256,bytes32,address)": {
        "params": {
          "_hashCode": "the resulting value when pdf is hashed.\r",
          "_studentAddress": "Blockchain Address associated to the student.\r",
          "_templateId": "uint256 value corresponding to the index position of template in the templates[] array.\r"
        }
      },
      "awardRegularCertificate(bytes32)": {
        "details": "Record the hash value of the pdf document to the blockchain account.\r",
        "params": {
          "_hashCode": "the resulting value when pdf is hashed.\r"
        },
        "return": "true if awarding of certificate is good, false if awarding of certificate fails.\r"
      },
      "createTemplate(string,string)": {
        "details": "Only account in the issuer[] array can call this function.\r",
        "params": {
          "_description": "certificate description e.g. BTA Expert Program\r",
          "_title": "certificate description e.g. Certificate of Attendance.\r"
        }
      },
      "deActivateIssuerById(uint256)": {
        "params": {
          "_index": "uint256 value corresponding to the index position of the training institution\r in the issuers[] array.\r"
        }
      },
      "getIssuedTemplates(uint256)": {
        "params": {
          "_id": "uint256 value corresponding to the index position of the training institution\r"
        },
        "return": "an array containing the template ids created template by the institution \r"
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract.\r"
      },
      "owner()": {
        "return": "the address of the owner.\r"
      },
      "reActivateIssuerById(uint256)": {
        "params": {
          "_index": "uint256 value corresponding to the index position of the training institution\r in the issuers[] array.\r"
        }
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract.\r"
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
        "params": {
          "newOwner": "The address to transfer ownership to.\r"
        }
      },
      "validateRegularCertificate(bytes32)": {
        "params": {
          "_hashCode": "the resulting value when pdf is hashed.\r"
        },
        "return": "true if Certificate exist in the blockchain, false if not.\r"
      }
    }
  },
  "userdoc": {
    "methods": {
      "accreditIssuer(address,string)": {
        "notice": "Add training institution to the blockchain.\r"
      },
      "awardRegularCertificate(bytes32)": {
        "notice": "Only accredited account can call this function.\r"
      },
      "createTemplate(string,string)": {
        "notice": "Creates blank certificates which will become basis for certificates\r to be issued.\r"
      },
      "deActivateIssuerById(uint256)": {
        "notice": "Prevent a training institution from creating and awarding certificates.\r"
      },
      "reActivateIssuerById(uint256)": {
        "notice": "Allows a training institution from creating and awarding certificates.\r"
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner.\r It will not be possible to call the functions with the `onlyOwner`\r modifier anymore.\r"
      }
    }
  }
}