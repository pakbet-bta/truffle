{
  "contractName": "PakbetStudent",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "students",
      "outputs": [
        {
          "name": "blockChainAccount",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_hashCode",
          "type": "bytes32"
        }
      ],
      "name": "awardRegularCertificate",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "issuers",
      "outputs": [
        {
          "name": "active",
          "type": "bool"
        },
        {
          "name": "name",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "certificates",
      "outputs": [
        {
          "name": "issuedTo",
          "type": "uint256"
        },
        {
          "name": "issuedBy",
          "type": "uint256"
        },
        {
          "name": "templateUsed",
          "type": "uint256"
        },
        {
          "name": "date",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_title",
          "type": "string"
        },
        {
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "createTemplate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_hashCode",
          "type": "bytes32"
        }
      ],
      "name": "validateRegularCertificate",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_templateId",
          "type": "uint256"
        },
        {
          "name": "_hashCode",
          "type": "bytes32"
        },
        {
          "name": "_studentAddress",
          "type": "address"
        }
      ],
      "name": "awardPublicCertificates",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_issuerAddress",
          "type": "address"
        },
        {
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "accreditIssuer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "templates",
      "outputs": [
        {
          "name": "createdBy",
          "type": "address"
        },
        {
          "name": "title",
          "type": "string"
        },
        {
          "name": "description",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "deActivateIssuerById",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getIssuedTemplates",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "reActivateIssuerById",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "issuerAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "title",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "description",
          "type": "string"
        }
      ],
      "name": "NewTemplate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "hashCode",
          "type": "bytes32"
        }
      ],
      "name": "NewCertificate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "hashCode",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "student",
          "type": "address"
        }
      ],
      "name": "NewPremiumCertificate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "issuerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "name",
          "type": "string"
        }
      ],
      "name": "NewIssuer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "student",
          "type": "address"
        }
      ],
      "name": "NewStudent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_studentAddress",
          "type": "address"
        }
      ],
      "name": "enrollStudent",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getStudentCertificates",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"students\",\"outputs\":[{\"name\":\"blockChainAccount\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_studentAddress\",\"type\":\"address\"}],\"name\":\"enrollStudent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_hashCode\",\"type\":\"bytes32\"}],\"name\":\"awardRegularCertificate\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"issuers\",\"outputs\":[{\"name\":\"active\",\"type\":\"bool\"},{\"name\":\"name\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"certificates\",\"outputs\":[{\"name\":\"issuedTo\",\"type\":\"uint256\"},{\"name\":\"issuedBy\",\"type\":\"uint256\"},{\"name\":\"templateUsed\",\"type\":\"uint256\"},{\"name\":\"date\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_title\",\"type\":\"string\"},{\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"createTemplate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_hashCode\",\"type\":\"bytes32\"}],\"name\":\"validateRegularCertificate\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_templateId\",\"type\":\"uint256\"},{\"name\":\"_hashCode\",\"type\":\"bytes32\"},{\"name\":\"_studentAddress\",\"type\":\"address\"}],\"name\":\"awardPublicCertificates\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_issuerAddress\",\"type\":\"address\"},{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"accreditIssuer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"templates\",\"outputs\":[{\"name\":\"createdBy\",\"type\":\"address\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"deActivateIssuerById\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getStudentCertificates\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getIssuedTemplates\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"reActivateIssuerById\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"issuerAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"title\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"description\",\"type\":\"string\"}],\"name\":\"NewTemplate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"hashCode\",\"type\":\"bytes32\"}],\"name\":\"NewCertificate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"hashCode\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"student\",\"type\":\"address\"}],\"name\":\"NewPremiumCertificate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"issuerId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"}],\"name\":\"NewIssuer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"student\",\"type\":\"address\"}],\"name\":\"NewStudent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"accreditIssuer(address,string)\":{\"details\":\"Only the owner of the smart contract account can call this function. \\r\",\"params\":{\"_issuerAddress\":\"Blockchain Address associated to the training institution.\\r\",\"_name\":\"Name of the training institution.\\r\"}},\"awardPublicCertificates(uint256,bytes32,address)\":{\"params\":{\"_hashCode\":\"the resulting value when pdf is hashed.\\r\",\"_studentAddress\":\"Blockchain Address associated to the student.\\r\",\"_templateId\":\"uint256 value corresponding to the index position of template in the templates[] array.\\r\"}},\"awardRegularCertificate(bytes32)\":{\"details\":\"Record the hash value of the pdf document to the blockchain account.\\r\",\"params\":{\"_hashCode\":\"the resulting value when pdf is hashed.\\r\"},\"return\":\"true if awarding of certificate is good, false if awarding of certificate fails.\\r\"},\"createTemplate(string,string)\":{\"details\":\"Only account in the issuer[] array can call this function.\\r\",\"params\":{\"_description\":\"certificate description e.g. BTA Expert Program\\r\",\"_title\":\"certificate description e.g. Certificate of Attendance.\\r\"}},\"deActivateIssuerById(uint256)\":{\"params\":{\"_index\":\"uint256 value corresponding to the index position of the training institution\\r in the issuers[] array.\\r\"}},\"enrollStudent(address)\":{\"details\":\"Only accredited account can call this function. \\r\",\"params\":{\"_studentAddress\":\"Blockchain Address associated to the student.\\r\"}},\"getIssuedTemplates(uint256)\":{\"params\":{\"_id\":\"uint256 value corresponding to the index position of the training institution\\r\"},\"return\":\"an array containing the template ids created template by the institution \\r\"},\"getStudentCertificates(uint256)\":{\"params\":{\"_id\":\"uint256 value corresponding to the index position of the student\\r in the students[] array.\\r\"},\"return\":\"an array containing the certificate ids owned by the student.\\r\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\\r\"},\"owner()\":{\"return\":\"the address of the owner.\\r\"},\"reActivateIssuerById(uint256)\":{\"params\":{\"_index\":\"uint256 value corresponding to the index position of the training institution\\r in the issuers[] array.\\r\"}},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\\r\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\\r\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\\r\"}},\"validateRegularCertificate(bytes32)\":{\"params\":{\"_hashCode\":\"the resulting value when pdf is hashed.\\r\"},\"return\":\"true if Certificate exist in the blockchain, false if not.\\r\"}}},\"userdoc\":{\"methods\":{\"accreditIssuer(address,string)\":{\"notice\":\"Add training institution to the blockchain.\\r\"},\"awardRegularCertificate(bytes32)\":{\"notice\":\"Only accredited account can call this function.\\r\"},\"createTemplate(string,string)\":{\"notice\":\"Creates blank certificates which will become basis for certificates\\r to be issued.\\r\"},\"deActivateIssuerById(uint256)\":{\"notice\":\"Prevent a training institution from creating and awarding certificates.\\r\"},\"enrollStudent(address)\":{\"notice\":\"Add student to the blockchain.\\r\"},\"reActivateIssuerById(uint256)\":{\"notice\":\"Allows a training institution from creating and awarding certificates.\\r\"},\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner.\\r It will not be possible to call the functions with the `onlyOwner`\\r modifier anymore.\\r\"}}}},\"settings\":{\"compilationTarget\":{\"/D/ethereum/pakbet/contracts/PakbetStudent.sol\":\"PakbetStudent\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/ethereum/pakbet/contracts/PakbetCertificate.sol\":{\"keccak256\":\"0x2939734a1e6705a2fd296dd51cd9d3ed55ff1e5b6e8fd6609b12d8a48b5132f3\",\"urls\":[\"bzzr://d2ba999d7715b8fe807a9bc574b92cb3833d9d893fd7a5397836ff48bf0f3ed9\"]},\"/D/ethereum/pakbet/contracts/PakbetIssuer.sol\":{\"keccak256\":\"0x92b11116e0bb8022c2ab6a037520881f297792278c0ed3da22e440c98bb8d70f\",\"urls\":[\"bzzr://35b680c6bcecf0b7230124bbe175ff88672cfde6b79a7f30e2132c2f17dd7197\"]},\"/D/ethereum/pakbet/contracts/PakbetStudent.sol\":{\"keccak256\":\"0xd4196f6e8997fa60fff34b3d6e18d51bb23feea0b58da84462b6ab1a6f312e0c\",\"urls\":[\"bzzr://1ecbe69e5c775570b286be4c3024b9f9caaa02f3783dcc26352d321a50b74054\"]},\"/D/ethereum/pakbet/contracts/PakbetTemplate.sol\":{\"keccak256\":\"0xbbc328f8db84d8557ea49add9118aa0c3087c65f48e18432ba6464260f51207a\",\"urls\":[\"bzzr://e19b2af69f2ebfbc4765567e325558c983d9e583dbddc0e9bd91d48d5e90c176\"]},\"/D/ethereum/pakbet/contracts/PakbetUsecase.sol\":{\"keccak256\":\"0x0e5a31165ad9dcf594a2364c4683d9afe8798d138421cd5dad0afa92775b3b29\",\"urls\":[\"bzzr://a01e273a676916731946b191dc5bfa400f1b4246227d16a378410a5a888c696c\"]},\"/D/ethereum/pakbet/contracts/ownable.sol\":{\"keccak256\":\"0x585a2f025ee234e642ac3dff65fd66bf8a69e80a60f0948f89e919bd30dfdf43\",\"urls\":[\"bzzr://a365be6631b4b7206e401551b60251340e2383968f505b1502c095a4544e15cd\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100fc576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306ead22e146101015780632a207eae1461017c57806352a8f271146101cd57806361ec30c414610220578063663b3e22146102df5780636aeae8371461034f578063715018a61461042a5780638da5cb5b146104415780638f32d59b1461049857806392f0ae86146104c757806397ded1b01461051a578063a4d68d751461057f578063bc52565214610625578063c01ff84c14610778578063d3eacc19146107b3578063e5f5a14614610843578063e97c147b146108d3578063f2fde38b1461090e575b600080fd5b34801561010d57600080fd5b5061013a6004803603602081101561012457600080fd5b810190808035906020019092919050505061095f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561018857600080fd5b506101cb6004803603602081101561019f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109ac565b005b3480156101d957600080fd5b50610206600480360360208110156101f057600080fd5b8101908080359060200190929190505050610a6b565b604051808215151515815260200191505060405180910390f35b34801561022c57600080fd5b506102596004803603602081101561024357600080fd5b8101908080359060200190929190505050610bde565b604051808315151515815260200180602001828103825283818151815260200191508051906020019080838360005b838110156102a3578082015181840152602081019050610288565b50505050905090810190601f1680156102d05780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b3480156102eb57600080fd5b506103186004803603602081101561030257600080fd5b8101908080359060200190929190505050610cb6565b604051808581526020018481526020018381526020018263ffffffff1663ffffffff16815260200194505050505060405180910390f35b34801561035b57600080fd5b506104286004803603604081101561037257600080fd5b810190808035906020019064010000000081111561038f57600080fd5b8201836020820111156103a157600080fd5b803590602001918460018302840111640100000000831117156103c357600080fd5b9091929391929390803590602001906401000000008111156103e457600080fd5b8201836020820111156103f657600080fd5b8035906020019184600183028401116401000000008311171561041857600080fd5b9091929391929390505050610d05565b005b34801561043657600080fd5b5061043f610f73565b005b34801561044d57600080fd5b50610456611045565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104a457600080fd5b506104ad61106e565b604051808215151515815260200191505060405180910390f35b3480156104d357600080fd5b50610500600480360360208110156104ea57600080fd5b81019080803590602001909291905050506110c5565b604051808215151515815260200191505060405180910390f35b34801561052657600080fd5b5061057d6004803603606081101561053d57600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611117565b005b34801561058b57600080fd5b50610623600480360360408110156105a257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156105df57600080fd5b8201836020820111156105f157600080fd5b8035906020019184600183028401116401000000008311171561061357600080fd5b9091929391929390505050611443565b005b34801561063157600080fd5b5061065e6004803603602081101561064857600080fd5b81019080803590602001909291905050506114a9565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156106d45780820151818401526020810190506106b9565b50505050905090810190601f1680156107015780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561073a57808201518184015260208101905061071f565b50505050905090810190601f1680156107675780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b34801561078457600080fd5b506107b16004803603602081101561079b57600080fd5b8101908080359060200190929190505050611632565b005b3480156107bf57600080fd5b506107ec600480360360208110156107d657600080fd5b81019080803590602001909291905050506116ba565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561082f578082015181840152602081019050610814565b505050509050019250505060405180910390f35b34801561084f57600080fd5b5061087c6004803603602081101561086657600080fd5b8101908080359060200190929190505050611829565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156108bf5780820151818401526020810190506108a4565b505050509050019250505060405180910390f35b3480156108df57600080fd5b5061090c600480360360208110156108f657600080fd5b8101908080359060200190929190505050611944565b005b34801561091a57600080fd5b5061095d6004803603602081101561093157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119cd565b005b60038181548110151561096e57fe5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081565b33600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610a0557600080fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515610a5e57600080fd5b610a67826119ec565b5050565b6000336000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610b0a57600080fd5b600281815481101515610b1957fe5b906000526020600020906003020160000160009054906101000a900460ff161515610b4357600080fd5b600c600085815260200190815260200160002060009054906101000a900460ff16151515610b7057600080fd5b6001600c600086815260200190815260200160002060006101000a81548160ff0219169083151502179055507f35445dd7684af4d0b1828f42019bd59ce22b71771e931983dfe04d5eb270afd8846040518082815260200191505060405180910390a1600192505050919050565b600281815481101515610bed57fe5b90600052602060002090600302016000915090508060000160009054906101000a900460ff1690806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cac5780601f10610c8157610100808354040283529160200191610cac565b820191906000526020600020905b815481529060010190602001808311610c8f57829003601f168201915b5050505050905082565b600181815481101515610cc557fe5b90600052602060002090600402016000915090508060000154908060010154908060020154908060030160009054906101000a900463ffffffff16905084565b33600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610d5e57600080fd5b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600086868686600286815481101515610db757fe5b9060005260206000209060030201600101604051602001808060200180602001806020018481038452898982818152602001925080828437600081840152601f19601f8201169050808301925050508481038352878782818152602001925080828437600081840152601f19601f820116905080830192505050848103825285818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015610eb25780601f10610e8757610100808354040283529160200191610eb2565b820191906000526020600020905b815481529060010190602001808311610e9557829003601f168201915b505098505050505050505050604051602081830303815290604052805190602001209050610f6a3388888080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505087878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505084611b6e565b50505050505050565b610f7b61106e565b1515610f8657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000600c600083815260200190815260200160002060009054906101000a900460ff16806111105750600b600083815260200190815260200160002060009054906101000a900460ff165b9050919050565b33600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561117057600080fd5b6004805490508410151561118357600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166004858154811015156111a957fe5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156111fd57600080fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561125557600080fd5b600b600084815260200190815260200160002060009054906101000a900460ff1615151561128257600080fd5b6000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006001806080604051908101604052808681526020018581526020018a81526020014263ffffffff168152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548163ffffffff021916908363ffffffff16021790555050500390506001600b600088815260200190815260200160002060006101000a81548160ff0219169083151502179055508060096000888152602001908152602001600020819055506003838154811015156113ff57fe5b906000526020600020906002020160010181908060018154018082558091505090600182039060005260206000200160009091929091909150555050505050505050565b61144b61106e565b151561145657600080fd5b6114a48383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611eb6565b505050565b6004818154811015156114b857fe5b90600052602060002090600302016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561158a5780601f1061155f5761010080835404028352916020019161158a565b820191906000526020600020905b81548152906001019060200180831161156d57829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116285780601f106115fd57610100808354040283529160200191611628565b820191906000526020600020905b81548152906001019060200180831161160b57829003601f168201915b5050505050905083565b61163a61106e565b151561164557600080fd5b60028181548110151561165457fe5b906000526020600020906003020160000160009054906101000a900460ff16151561167e57600080fd5b600060028281548110151561168f57fe5b906000526020600020906003020160000160006101000a81548160ff02191690831515021790555050565b60603373ffffffffffffffffffffffffffffffffffffffff166003838154811015156116e257fe5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561173657600080fd5b606060038381548110151561174757fe5b90600052602060002090600202016001018054905060405190808252806020026020018201604052801561178a5781602001602082028038833980820191505090505b50905060008090505b6003848154811015156117a257fe5b90600052602060002090600202016001018054905081101561181f576003848154811015156117cd57fe5b9060005260206000209060020201600101818154811015156117eb57fe5b9060005260206000200154828281518110151561180457fe5b90602001906020020181815250508080600101915050611793565b5080915050919050565b606061183361106e565b151561183e57600080fd5b6002805490508210151561185157600080fd5b606060028381548110151561186257fe5b9060005260206000209060030201600201805490506040519080825280602002602001820160405280156118a55781602001602082028038833980820191505090505b50905060008090505b6002848154811015156118bd57fe5b90600052602060002090600302016002018054905081101561193a576002848154811015156118e857fe5b90600052602060002090600302016002018181548110151561190657fe5b9060005260206000200154828281518110151561191f57fe5b906020019060200201818152505080806001019150506118ae565b5080915050919050565b61194c61106e565b151561195757600080fd5b60028181548110151561196657fe5b906000526020600020906003020160000160009054906101000a900460ff1615151561199157600080fd5b60016002828154811015156119a257fe5b906000526020600020906003020160000160006101000a81548160ff02191690831515021790555050565b6119d561106e565b15156119e057600080fd5b6119e9816120dc565b50565b600060038054809190600101611a0291906121d6565b905081600382815481101515611a1457fe5b906000526020600020906002020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f76d881824e81c30f0d2ea36f999b13c9d258bc821dc2d29a17eb8ba7f95c275b8183604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b80600a600082815260200190815260200160002060009054906101000a900460ff16151515611b9c57600080fd5b600060048054809190600101611bb29190612208565b90506000600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600281815481101515611c0757fe5b906000526020600020906003020160000160009054906101000a900460ff161515611c3157600080fd5b86600483815481101515611c4157fe5b906000526020600020906003020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600483815481101515611ca057fe5b90600052602060002090600302016001019080519060200190611cc492919061223a565b5084600483815481101515611cd557fe5b90600052602060002090600302016002019080519060200190611cf992919061223a565b50600281815481101515611d0957fe5b90600052602060002090600302016002018290806001815401808255809150509060018203906000526020600020016000909192909190915055506001600a600086815260200190815260200160002060006101000a81548160ff0219169083151502179055507fcbb28b3e1f77d025889ab5d1e72a2eca69e6105bc36f0044122e59c55f40e18f878787604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015611e0a578082015181840152602081019050611def565b50505050905090810190601f168015611e375780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015611e70578082015181840152602081019050611e55565b50505050905090810190601f168015611e9d5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a150505050505050565b81600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515611f1057600080fd5b600060028054809190600101611f2691906122ba565b90506001600282815481101515611f3957fe5b906000526020600020906003020160000160006101000a81548160ff02191690831515021790555082600282815481101515611f7157fe5b90600052602060002090600302016001019080519060200190611f9592919061223a565b506001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507faf49f6e647e48528a5c4c0a5801947007b7fa9744c066de10b2f7e747754bf1d81846040518083815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561209b578082015181840152602081019050612080565b50505050905090810190601f1680156120c85780820380516001836020036101000a031916815260200191505b50935050505060405180910390a150505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561211857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8154818355818111156122035760020281600202836000526020600020918201910161220291906122ec565b5b505050565b815481835581811115612235576003028160030283600052602060002091820191016122349190612342565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061227b57805160ff19168380011785556122a9565b828001600101855582156122a9579182015b828111156122a857825182559160200191906001019061228d565b5b5090506122b691906123a8565b5090565b8154818355818111156122e7576003028160030283600052602060002091820191016122e691906123cd565b5b505050565b61233f91905b8082111561233b57600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006123329190612420565b506002016122f2565b5090565b90565b6123a591905b808211156123a157600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006123889190612441565b6002820160006123989190612441565b50600301612348565b5090565b90565b6123ca91905b808211156123c65760008160009055506001016123ae565b5090565b90565b61241d91905b8082111561241957600080820160006101000a81549060ff02191690556001820160006124009190612441565b6002820160006124109190612420565b506003016123d3565b5090565b90565b508054600082559060005260206000209081019061243e91906123a8565b50565b50805460018160011615610100020316600290046000825580601f106124675750612486565b601f01602090049060005260206000209081019061248591906123a8565b5b5056fea165627a7a72305820e94f16738cd381c9bc5aedebe7b32cdd281b030d1f6178c4ca577e1e522bcd6e0029",
  "sourceMap": "64:1441:3:-;;;528:10:6;519:6;;:19;;;;;;;;;;;;;;;;;;583:6;;;;;;;;;;;550:40;;579:1;550:40;;;;;;;;;;;;64:1441:3;;;;;;",
  "deployedSourceMap": "64:1441:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:25:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;947:25:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;947:25:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;326:185:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;326:185:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;326:185:3;;;;;;;;;;;;;;;;;;;;;;445:266:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;445:266:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;445:266:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;917:23:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;917:23:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;917:23:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;917:23:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;877:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;877:33:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;877:33:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;462:338:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;462:338:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;462:338:4;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;462:338:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;462:338:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;462:338:4;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;462:338:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;462:338:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;462:338:4;;;;;;;;;;;;;;;1304:130:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1304:130:6;;;;;;654:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;654:72:6;;;;;;;;;;;;;;;;;;;;;;;;;;;952:85;;8:9:-1;5:2;;;30:1;27;20:12;5:2;952:85:6;;;;;;;;;;;;;;;;;;;;;;;;;;;881:175:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;881:175:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;881:175:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1344:832;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1344:832:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1344:832:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;415:147:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;415:147:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;415:147:2;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;415:147:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;415:147:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;415:147:2;;;;;;;;;;;;;;;979:27:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;979:27:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;979:27:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;979:27:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;979:27:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;813:156:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;813:156:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;813:156:2;;;;;;;;;;;;;;;;;;;;737:432:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;737:432:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;737:432:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;737:432:3;;;;;;;;;;;;;;;;;1020:407:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1020:407:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1020:407:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1020:407:4;;;;;;;;;;;;;;;;;1215:156:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1215:156:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1215:156:2;;;;;;;;;;;;;;;;;;;;1598:103:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1598:103:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1598:103:6;;;;;;;;;;;;;;;;;;;;;;947:25:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;326:185:3:-;396:10;1636:17:5;:33;1654:14;1636:33;;;;;;;;;;;;;;;;;;;;;;;;;1628:42;;;;;;;;428:15:3;:32;444:15;428:32;;;;;;;;;;;;;;;;;;;;;;;;;427:33;419:42;;;;;;;;472:31;487:15;472:14;:31::i;:::-;326:185;;:::o;445:266:1:-;535:4;515:10;2006:13:5;2022:15;:24;2038:7;2022:24;;;;;;;;;;;;;;;;2006:40;;2075:17;:26;2093:7;2075:26;;;;;;;;;;;;;;;;;;;;;;;;;2067:35;;;;;;;;2122:7;2130:5;2122:14;;;;;;;;;;;;;;;;;;;;:21;;;;;;;;;;;;2113:31;;;;;;;;561:19:1;:30;581:9;561:30;;;;;;;;;;;;;;;;;;;;;560:31;552:40;;;;;;;;636:4;603:19;:30;623:9;603:30;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;656:25;671:9;656:25;;;;;;;;;;;;;;;;;;699:4;692:11;;445:266;;;;;:::o;917:23:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;877:33::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;462:338:4:-;562:10;1636:17:5;:33;1654:14;1636:33;;;;;;;;;;;;;;;;;;;;;;;;;1628:42;;;;;;;;585:13:4;601:15;:27;617:10;601:27;;;;;;;;;;;;;;;;585:43;;639:16;679:6;;687:12;;701:7;709:5;701:14;;;;;;;;;;;;;;;;;;;;:19;;668:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;668:53:4;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;668:53:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;668:53:4;;;658:64;;;;;;639:83;;733:59;749:10;761:6;;733:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;733:59:4;;;;;;769:12;;733:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;733:59:4;;;;;;783:8;733:15;:59::i;:::-;1681:1:5;;462:338:4;;;;;:::o;1304:130:6:-;845:9;:7;:9::i;:::-;837:18;;;;;;;;1399:1;1362:40;;1383:6;;;;;;;;;;;1362:40;;;;;;;;;;;;1426:1;1409:6;;:19;;;;;;;;;;;;;;;;;;1304:130::o;654:72::-;691:7;714:6;;;;;;;;;;;707:13;;654:72;:::o;952:85::-;991:4;1025:6;;;;;;;;;;;1011:20;;:10;:20;;;1004:27;;952:85;:::o;881:175:1:-;958:4;983:19;:30;1003:9;983:30;;;;;;;;;;;;;;;;;;;;;:64;;;;1017:19;:30;1037:9;1017:30;;;;;;;;;;;;;;;;;;;;;983:64;975:73;;881:175;;;:::o;1344:832::-;1510:10;1636:17:5;:33;1654:14;1636:33;;;;;;;;;;;;;;;;;;;;;;;;;1628:42;;;;;;;;1561:9:1;:16;;;;1547:11;:30;1539:39;;;;;;;;1633:10;1597:46;;:9;1607:11;1597:22;;;;;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;:46;;;1589:55;;;;;;;;1663:15;:32;1679:15;1663:32;;;;;;;;;;;;;;;;;;;;;;;;;1655:41;;;;;;;;1716:19;:30;1736:9;1716:30;;;;;;;;;;;;;;;;;;;;;1715:31;1707:40;;;;;;;;1768:20;1791:16;:33;1808:15;1791:33;;;;;;;;;;;;;;;;1768:56;;1835:19;1857:15;:27;1873:10;1857:27;;;;;;;;;;;;;;;;1835:49;;1905:10;2004:1;1918:12;1936:64;;;;;;;;;1948:12;1936:64;;;;1962:11;1936:64;;;;1975:11;1936:64;;;;1995:3;1936:64;;;;;1918:83;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1918:83:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:87;1905:100;;2049:4;2016:19;:30;2036:9;2016:30;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;2096:2;2064:18;:29;2083:9;2064:29;;;;;;;;;;;:34;;;;2119:8;2128:12;2119:22;;;;;;;;;;;;;;;;;;;;:40;;2165:2;2119:49;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2119:49:1;;;;;;;;;;;;;;;;;;;;;;1681:1:5;;;1344:832:1;;;;:::o;415:147:2:-;845:9:6;:7;:9::i;:::-;837:18;;;;;;;;516:38:2;532:14;548:5;;516:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;516:38:2;;;;;;:15;:38::i;:::-;415:147;;;:::o;979:27:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;813:156:2:-;845:9:6;:7;:9::i;:::-;837:18;;;;;;;;897:7:2;905:6;897:15;;;;;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;889:31;;;;;;;;956:5;931:7;939:6;931:15;;;;;;;;;;;;;;;;;;;;:22;;;:30;;;;;;;;;;;;;;;;;;813:156;:::o;737:432:3:-;804:16;877:10;842:45;;:8;851:3;842:13;;;;;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;:45;;;833:55;;;;;;;;899:23;939:8;948:3;939:13;;;;;;;;;;;;;;;;;;;;:31;;:38;;;;925:53;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;925:53:3;;;;899:79;;1004:6;1013:1;1004:10;;999:139;1020:8;1029:3;1020:13;;;;;;;;;;;;;;;;;;;;:31;;:38;;;;1016:1;:42;999:139;;;1092:8;1101:3;1092:13;;;;;;;;;;;;;;;;;;;;:31;;1124:1;1092:34;;;;;;;;;;;;;;;;;;1080:6;1087:1;1080:9;;;;;;;;;;;;;;;;;:46;;;;;1060:3;;;;;;;999:139;;;;1155:6;1148:13;;;737:432;;;:::o;1020:407:4:-;1093:16;845:9:6;:7;:9::i;:::-;837:18;;;;;;;;1137:7:4;:14;;;;1131:3;:20;1123:29;;;;;;;;1163:23;1203:7;1211:3;1203:12;;;;;;;;;;;;;;;;;;;;:29;;:36;;;;1189:51;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;1189:51:4;;;;1163:77;;1266:6;1275:1;1266:10;;1261:135;1282:7;1290:3;1282:12;;;;;;;;;;;;;;;;;;;;:29;;:36;;;;1278:1;:40;1261:135;;;1352:7;1360:3;1352:12;;;;;;;;;;;;;;;;;;;;:29;;1382:1;1352:32;;;;;;;;;;;;;;;;;;1340:6;1347:1;1340:9;;;;;;;;;;;;;;;;;:44;;;;;1320:3;;;;;;;1261:135;;;;1413:6;1406:13;;;1020:407;;;:::o;1215:156:2:-;845:9:6;:7;:9::i;:::-;837:18;;;;;;;;1300:7:2;1308:6;1300:15;;;;;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;1299:23;1291:32;;;;;;;;1359:4;1334:7;1342:6;1334:15;;;;;;;;;;;;;;;;;;;;:22;;;:29;;;;;;;;;;;;;;;;;;1215:156;:::o;1598:103:6:-;845:9;:7;:9::i;:::-;837:18;;;;;;;;1667:28;1686:8;1667:18;:28::i;:::-;1598:103;:::o;1181:321:3:-;1250:10;1263:8;:17;;;;;;;;;;;:::i;:::-;1250:30;;1334:15;1301:8;1310:2;1301:12;;;;;;;;;;;;;;;;;;;;:30;;;:48;;;;;;;;;;;;;;;;;;1395:4;1360:15;:32;1376:15;1360:32;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;1446:2;1410:16;:33;1427:15;1410:33;;;;;;;;;;;;;;;:38;;;;1464:31;1475:2;1479:15;1464:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;1181:321;;:::o;1435:680:4:-;1633:9;1772:17:5;:28;1790:9;1772:28;;;;;;;;;;;;;;;;;;;;;1771:29;1763:38;;;;;;;;1661:10:4;1674:9;:18;;;;;;;;;;;:::i;:::-;1661:31;;1703:13;1719:15;:25;1735:8;1719:25;;;;;;;;;;;;;;;;1703:41;;1774:7;1782:5;1774:14;;;;;;;;;;;;;;;;;;;;:21;;;;;;;;;;;;1765:31;;;;;;;;1843:8;1817:9;1827:2;1817:13;;;;;;;;;;;;;;;;;;;;:23;;;:34;;;;;;;;;;;;;;;;;;1884:6;1862:9;1872:2;1862:13;;;;;;;;;;;;;;;;;;;;:19;;:28;;;;;;;;;;;;:::i;:::-;;1929:12;1901:9;1911:2;1901:13;;;;;;;;;;;;;;;;;;;;:25;;:40;;;;;;;;;;;;:::i;:::-;;1962:7;1970:5;1962:14;;;;;;;;;;;;;;;;;;;;:31;;1999:2;1962:40;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1962:40:4;;;;;;;;;;;;;;;;;;;;;;2044:4;2013:17;:28;2031:9;2013:28;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;2064:43;2076:8;2086:6;2094:12;2064:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2064:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2064:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1812:1:5;;1435:680:4;;;;;:::o;1383:384:2:-;1478:14;1505:17:5;:33;1523:14;1505:33;;;;;;;;;;;;;;;;;;;;;;;;;1504:34;1496:43;;;;;;;;1505:10:2;1518:7;:16;;;;;;;;;;;:::i;:::-;1505:29;;1576:4;1555:7;1563:2;1555:11;;;;;;;;;;;;;;;;;;;;:18;;;:25;;;;;;;;;;;;;;;;;;1610:5;1591:7;1599:2;1591:11;;;;;;;;;;;;;;;;;;;;:16;;:24;;;;;;;;;;;;:::i;:::-;;1672:4;1636:17;:33;1654:14;1636:33;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1721:2;1687:15;:31;1703:14;1687:31;;;;;;;;;;;;;;;:36;;;;1739:20;1749:2;1753:5;1739:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1739:20:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1550:1:5;1383:384:2;;;:::o;1838:173:6:-;1928:1;1908:22;;:8;:22;;;;1900:31;;;;;;;;1972:8;1943:38;;1964:6;;;;;;;;;;;1943:38;;;;;;;;;;;;1997:8;1988:6;;:17;;;;;;;;;;;;;;;;;;1838:173;:::o;64:1441:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"./PakbetCertificate.sol\";\r\n\r\ncontract PakbetStudent is PakbetCertificate {\r\n    \r\n    /**\r\n     * @notice Add student to the blockchain.\r\n     * @dev Only accredited account can call this function. \r\n     * @param _studentAddress Blockchain Address associated to the student.\r\n     */ \r\n    function enrollStudent(address _studentAddress) external isAccredited(msg.sender) {\r\n        require(!premiumStudents[_studentAddress]);\r\n        _enrollStudent(_studentAddress);\r\n    }\r\n    \r\n    /**\r\n     * @param _id uint256 value corresponding to the index position of the student\r\n     * in the students[] array.\r\n     * @return an array containing the certificate ids owned by the student.\r\n     */ \r\n    function getStudentCertificates(uint256 _id) external view returns(uint256[] memory) {\r\n        require (students[_id].blockChainAccount == msg.sender);\r\n        uint256[] memory result = new uint256[](students[_id].certificatesOwned.length);\r\n        \r\n        for (uint i = 0; i < students[_id].certificatesOwned.length; i++) {\r\n            result[i] = students[_id].certificatesOwned[i];\r\n        }\r\n        return result;\r\n    }\r\n    \r\n    function _enrollStudent(address _studentAccount) internal {\r\n        uint256 id = students.length++;\r\n        \r\n        students[id].blockChainAccount = _studentAccount;\r\n        premiumStudents[_studentAccount] = true;\r\n        addressToStudent[_studentAccount] = id;\r\n        emit NewStudent(id, _studentAccount);\r\n   }\r\n}\r\n\r\n//Owner\r\n//\"0xCA35b7d915458EF540aDe6068dFe2F44E8fa733c\",\"Tutu Institute\"\r\n\r\n//Issuers\r\n//\"0x14723A09ACff6D2A60DcdF7aA4AFf308FDDC160C\",\"Block Chain\"\r\n//\"0x4B0897b0513fdC7C541B6d9D7E929C4e5364D2dB\",\"Kadenang Bloke\"\r\n\r\n//Students\r\n//\"0x583031D1113aD414F02576BD6afaBfb302140225\"\r\n//\"0xdD870fA1b7C4700F2BD7f44238821C26f7392148\"\r\n\r\n//Templates\r\n//\"Certificate of Completion\",\"Blockchain Security\"\r\n//\"Certificate of Attendance\",\"BTA Excellarator\"\r\n//\"Certificate of Participation\",\"BTA Expert\"\r\n//\"Certificate of Participation\",\"Block Chain\"\r\n//\"Certificate of Participation\",\"Kadenang Bloke\"\r\n\r\n\r\n//Regular Certificate\r\n//\"0x4365727469666963617465206f662050617274696369706174696f6e0a4a6f00\"\r\n//\"0x4365727469666963617465206f6620417474656e64616e63650a4a6f656c0000\"\r\n//\"0x4365727469666963617465206f6620436f6d706c6574696f6e0a4a6f656c0000\"\r\n\r\n//Public Certificate\r\n//0,\"0x7465737400000000000000000000000000000000000000000000000000000000\",\"0x583031D1113aD414F02576BD6afaBfb302140225\"\r\n//1,\"0x6a6f656c00000000000000000000000000000000000000000000000000000000\",\"0x583031D1113aD414F02576BD6afaBfb302140225\" \r\n//2,\"0x6a696d656e657a00000000000000000000000000000000000000000000000000\",\"0x583031D1113aD414F02576BD6afaBfb302140225\"\r\n//3,\"0x4a6f656c204b6164656e61206664642064206600000000000000000000000000\",\"0xdD870fA1b7C4700F2BD7f44238821C26f7392148\"\r\n\r\n\r\n\r\n",
  "sourcePath": "D:/ethereum/pakbet/contracts/PakbetStudent.sol",
  "ast": {
    "absolutePath": "/D/ethereum/pakbet/contracts/PakbetStudent.sol",
    "exportedSymbols": {
      "PakbetStudent": [
        442
      ]
    },
    "id": 443,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 319,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/D/ethereum/pakbet/contracts/PakbetCertificate.sol",
        "file": "./PakbetCertificate.sol",
        "id": 320,
        "nodeType": "ImportDirective",
        "scope": 443,
        "sourceUnit": 204,
        "src": "27:33:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 321,
              "name": "PakbetCertificate",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 203,
              "src": "90:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PakbetCertificate_$203",
                "typeString": "contract PakbetCertificate"
              }
            },
            "id": 322,
            "nodeType": "InheritanceSpecifier",
            "src": "90:17:3"
          }
        ],
        "contractDependencies": [
          203,
          317,
          625,
          810,
          919
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 442,
        "linearizedBaseContracts": [
          442,
          203,
          625,
          317,
          810,
          919
        ],
        "name": "PakbetStudent",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 342,
              "nodeType": "Block",
              "src": "408:103:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "427:33:3",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 332,
                            "name": "premiumStudents",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 706,
                            "src": "428:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 334,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 333,
                            "name": "_studentAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 324,
                            "src": "444:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "428:32:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 331,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1227,
                        1228
                      ],
                      "referencedDeclaration": 1227,
                      "src": "419:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "419:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 337,
                  "nodeType": "ExpressionStatement",
                  "src": "419:42:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 339,
                        "name": "_studentAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 324,
                        "src": "487:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 338,
                      "name": "_enrollStudent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 441,
                      "src": "472:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "472:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 341,
                  "nodeType": "ExpressionStatement",
                  "src": "472:31:3"
                }
              ]
            },
            "documentation": "@notice Add student to the blockchain.\r\n@dev Only accredited account can call this function. \r\n@param _studentAddress Blockchain Address associated to the student.\r",
            "id": 343,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 327,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1224,
                      "src": "396:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "396:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 329,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 326,
                  "name": "isAccredited",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 759,
                  "src": "383:12:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "383:24:3"
              }
            ],
            "name": "enrollStudent",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 324,
                  "name": "_studentAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 343,
                  "src": "349:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 323,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "349:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "348:25:3"
            },
            "returnParameters": {
              "id": 330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "408:0:3"
            },
            "scope": 442,
            "src": "326:185:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 404,
              "nodeType": "Block",
              "src": "822:347:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 352,
                              "name": "students",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 699,
                              "src": "842:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Student_$690_storage_$dyn_storage",
                                "typeString": "struct PakbetUseCase.Student storage ref[] storage ref"
                              }
                            },
                            "id": 354,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 353,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 345,
                              "src": "851:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "842:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Student_$690_storage",
                              "typeString": "struct PakbetUseCase.Student storage ref"
                            }
                          },
                          "id": 355,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "blockChainAccount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 686,
                          "src": "842:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 356,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1224,
                            "src": "877:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "877:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "842:45:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 351,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1227,
                        1228
                      ],
                      "referencedDeclaration": 1227,
                      "src": "833:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "833:55:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 360,
                  "nodeType": "ExpressionStatement",
                  "src": "833:55:3"
                },
                {
                  "assignments": [
                    364
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 364,
                      "name": "result",
                      "nodeType": "VariableDeclaration",
                      "scope": 404,
                      "src": "899:23:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 362,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "899:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 363,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "899:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 374,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 368,
                              "name": "students",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 699,
                              "src": "939:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Student_$690_storage_$dyn_storage",
                                "typeString": "struct PakbetUseCase.Student storage ref[] storage ref"
                              }
                            },
                            "id": 370,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 369,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 345,
                              "src": "948:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "939:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Student_$690_storage",
                              "typeString": "struct PakbetUseCase.Student storage ref"
                            }
                          },
                          "id": 371,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "certificatesOwned",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 689,
                          "src": "939:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 372,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "939:38:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "925:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 365,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "929:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 366,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "929:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "925:53:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "899:79:3"
                },
                {
                  "body": {
                    "id": 400,
                    "nodeType": "Block",
                    "src": "1065:73:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 389,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 364,
                              "src": "1080:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 391,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 390,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 376,
                              "src": "1087:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1080:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 392,
                                  "name": "students",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 699,
                                  "src": "1092:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Student_$690_storage_$dyn_storage",
                                    "typeString": "struct PakbetUseCase.Student storage ref[] storage ref"
                                  }
                                },
                                "id": 394,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 393,
                                  "name": "_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 345,
                                  "src": "1101:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1092:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Student_$690_storage",
                                  "typeString": "struct PakbetUseCase.Student storage ref"
                                }
                              },
                              "id": 395,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "certificatesOwned",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 689,
                              "src": "1092:31:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 397,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 396,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 376,
                              "src": "1124:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1092:34:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1080:46:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 399,
                        "nodeType": "ExpressionStatement",
                        "src": "1080:46:3"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 379,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 376,
                      "src": "1016:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 380,
                            "name": "students",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 699,
                            "src": "1020:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Student_$690_storage_$dyn_storage",
                              "typeString": "struct PakbetUseCase.Student storage ref[] storage ref"
                            }
                          },
                          "id": 382,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 381,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 345,
                            "src": "1029:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1020:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Student_$690_storage",
                            "typeString": "struct PakbetUseCase.Student storage ref"
                          }
                        },
                        "id": 383,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "certificatesOwned",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 689,
                        "src": "1020:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 384,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1020:38:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1016:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 401,
                  "initializationExpression": {
                    "assignments": [
                      376
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 376,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 401,
                        "src": "1004:6:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 375,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1004:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 378,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1013:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1004:10:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1060:3:3",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 386,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 376,
                        "src": "1060:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 388,
                    "nodeType": "ExpressionStatement",
                    "src": "1060:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "999:139:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 402,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 364,
                    "src": "1155:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 350,
                  "id": 403,
                  "nodeType": "Return",
                  "src": "1148:13:3"
                }
              ]
            },
            "documentation": "@param _id uint256 value corresponding to the index position of the student\r\nin the students[] array.\r\n@return an array containing the certificate ids owned by the student.\r",
            "id": 405,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStudentCertificates",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 345,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 405,
                  "src": "769:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 344,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "769:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "768:13:3"
            },
            "returnParameters": {
              "id": 350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 349,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 405,
                  "src": "804:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 347,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "804:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 348,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "804:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "803:18:3"
            },
            "scope": 442,
            "src": "737:432:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 440,
              "nodeType": "Block",
              "src": "1239:263:3",
              "statements": [
                {
                  "assignments": [
                    411
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 411,
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "scope": 440,
                      "src": "1250:10:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 410,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1250:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 415,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1263:17:3",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 412,
                        "name": "students",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 699,
                        "src": "1263:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Student_$690_storage_$dyn_storage",
                          "typeString": "struct PakbetUseCase.Student storage ref[] storage ref"
                        }
                      },
                      "id": 413,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1263:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1250:30:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 416,
                          "name": "students",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 699,
                          "src": "1301:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Student_$690_storage_$dyn_storage",
                            "typeString": "struct PakbetUseCase.Student storage ref[] storage ref"
                          }
                        },
                        "id": 418,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 417,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 411,
                          "src": "1310:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1301:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Student_$690_storage",
                          "typeString": "struct PakbetUseCase.Student storage ref"
                        }
                      },
                      "id": 419,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "blockChainAccount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 686,
                      "src": "1301:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 420,
                      "name": "_studentAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 407,
                      "src": "1334:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1301:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 422,
                  "nodeType": "ExpressionStatement",
                  "src": "1301:48:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 423,
                        "name": "premiumStudents",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 706,
                        "src": "1360:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 425,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 424,
                        "name": "_studentAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 407,
                        "src": "1376:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1360:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1395:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1360:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 428,
                  "nodeType": "ExpressionStatement",
                  "src": "1360:39:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 429,
                        "name": "addressToStudent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 718,
                        "src": "1410:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 431,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 430,
                        "name": "_studentAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 407,
                        "src": "1427:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1410:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 432,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 411,
                      "src": "1446:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1410:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 434,
                  "nodeType": "ExpressionStatement",
                  "src": "1410:38:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 436,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 411,
                        "src": "1475:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 437,
                        "name": "_studentAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 407,
                        "src": "1479:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 435,
                      "name": "NewStudent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "1464:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1464:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 439,
                  "nodeType": "EmitStatement",
                  "src": "1459:36:3"
                }
              ]
            },
            "documentation": null,
            "id": 441,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_enrollStudent",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 407,
                  "name": "_studentAccount",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "1205:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 406,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1205:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1204:25:3"
            },
            "returnParameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1239:0:3"
            },
            "scope": 442,
            "src": "1181:321:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 443,
        "src": "64:1441:3"
      }
    ],
    "src": "0:2847:3"
  },
  "legacyAST": {
    "absolutePath": "/D/ethereum/pakbet/contracts/PakbetStudent.sol",
    "exportedSymbols": {
      "PakbetStudent": [
        442
      ]
    },
    "id": 443,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 319,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/D/ethereum/pakbet/contracts/PakbetCertificate.sol",
        "file": "./PakbetCertificate.sol",
        "id": 320,
        "nodeType": "ImportDirective",
        "scope": 443,
        "sourceUnit": 204,
        "src": "27:33:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 321,
              "name": "PakbetCertificate",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 203,
              "src": "90:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PakbetCertificate_$203",
                "typeString": "contract PakbetCertificate"
              }
            },
            "id": 322,
            "nodeType": "InheritanceSpecifier",
            "src": "90:17:3"
          }
        ],
        "contractDependencies": [
          203,
          317,
          625,
          810,
          919
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 442,
        "linearizedBaseContracts": [
          442,
          203,
          625,
          317,
          810,
          919
        ],
        "name": "PakbetStudent",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 342,
              "nodeType": "Block",
              "src": "408:103:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "427:33:3",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 332,
                            "name": "premiumStudents",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 706,
                            "src": "428:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 334,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 333,
                            "name": "_studentAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 324,
                            "src": "444:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "428:32:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 331,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1227,
                        1228
                      ],
                      "referencedDeclaration": 1227,
                      "src": "419:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "419:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 337,
                  "nodeType": "ExpressionStatement",
                  "src": "419:42:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 339,
                        "name": "_studentAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 324,
                        "src": "487:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 338,
                      "name": "_enrollStudent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 441,
                      "src": "472:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "472:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 341,
                  "nodeType": "ExpressionStatement",
                  "src": "472:31:3"
                }
              ]
            },
            "documentation": "@notice Add student to the blockchain.\r\n@dev Only accredited account can call this function. \r\n@param _studentAddress Blockchain Address associated to the student.\r",
            "id": 343,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 327,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1224,
                      "src": "396:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "396:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 329,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 326,
                  "name": "isAccredited",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 759,
                  "src": "383:12:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "383:24:3"
              }
            ],
            "name": "enrollStudent",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 324,
                  "name": "_studentAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 343,
                  "src": "349:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 323,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "349:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "348:25:3"
            },
            "returnParameters": {
              "id": 330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "408:0:3"
            },
            "scope": 442,
            "src": "326:185:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 404,
              "nodeType": "Block",
              "src": "822:347:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 352,
                              "name": "students",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 699,
                              "src": "842:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Student_$690_storage_$dyn_storage",
                                "typeString": "struct PakbetUseCase.Student storage ref[] storage ref"
                              }
                            },
                            "id": 354,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 353,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 345,
                              "src": "851:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "842:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Student_$690_storage",
                              "typeString": "struct PakbetUseCase.Student storage ref"
                            }
                          },
                          "id": 355,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "blockChainAccount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 686,
                          "src": "842:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 356,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1224,
                            "src": "877:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "877:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "842:45:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 351,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1227,
                        1228
                      ],
                      "referencedDeclaration": 1227,
                      "src": "833:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "833:55:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 360,
                  "nodeType": "ExpressionStatement",
                  "src": "833:55:3"
                },
                {
                  "assignments": [
                    364
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 364,
                      "name": "result",
                      "nodeType": "VariableDeclaration",
                      "scope": 404,
                      "src": "899:23:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 362,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "899:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 363,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "899:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 374,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 368,
                              "name": "students",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 699,
                              "src": "939:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Student_$690_storage_$dyn_storage",
                                "typeString": "struct PakbetUseCase.Student storage ref[] storage ref"
                              }
                            },
                            "id": 370,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 369,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 345,
                              "src": "948:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "939:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Student_$690_storage",
                              "typeString": "struct PakbetUseCase.Student storage ref"
                            }
                          },
                          "id": 371,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "certificatesOwned",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 689,
                          "src": "939:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 372,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "939:38:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "925:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 365,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "929:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 366,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "929:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "925:53:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "899:79:3"
                },
                {
                  "body": {
                    "id": 400,
                    "nodeType": "Block",
                    "src": "1065:73:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 389,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 364,
                              "src": "1080:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 391,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 390,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 376,
                              "src": "1087:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1080:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 392,
                                  "name": "students",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 699,
                                  "src": "1092:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Student_$690_storage_$dyn_storage",
                                    "typeString": "struct PakbetUseCase.Student storage ref[] storage ref"
                                  }
                                },
                                "id": 394,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 393,
                                  "name": "_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 345,
                                  "src": "1101:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1092:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Student_$690_storage",
                                  "typeString": "struct PakbetUseCase.Student storage ref"
                                }
                              },
                              "id": 395,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "certificatesOwned",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 689,
                              "src": "1092:31:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 397,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 396,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 376,
                              "src": "1124:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1092:34:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1080:46:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 399,
                        "nodeType": "ExpressionStatement",
                        "src": "1080:46:3"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 379,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 376,
                      "src": "1016:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 380,
                            "name": "students",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 699,
                            "src": "1020:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Student_$690_storage_$dyn_storage",
                              "typeString": "struct PakbetUseCase.Student storage ref[] storage ref"
                            }
                          },
                          "id": 382,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 381,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 345,
                            "src": "1029:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1020:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Student_$690_storage",
                            "typeString": "struct PakbetUseCase.Student storage ref"
                          }
                        },
                        "id": 383,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "certificatesOwned",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 689,
                        "src": "1020:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 384,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1020:38:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1016:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 401,
                  "initializationExpression": {
                    "assignments": [
                      376
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 376,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 401,
                        "src": "1004:6:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 375,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1004:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 378,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1013:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1004:10:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1060:3:3",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 386,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 376,
                        "src": "1060:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 388,
                    "nodeType": "ExpressionStatement",
                    "src": "1060:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "999:139:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 402,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 364,
                    "src": "1155:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 350,
                  "id": 403,
                  "nodeType": "Return",
                  "src": "1148:13:3"
                }
              ]
            },
            "documentation": "@param _id uint256 value corresponding to the index position of the student\r\nin the students[] array.\r\n@return an array containing the certificate ids owned by the student.\r",
            "id": 405,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStudentCertificates",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 345,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 405,
                  "src": "769:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 344,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "769:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "768:13:3"
            },
            "returnParameters": {
              "id": 350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 349,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 405,
                  "src": "804:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 347,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "804:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 348,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "804:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "803:18:3"
            },
            "scope": 442,
            "src": "737:432:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 440,
              "nodeType": "Block",
              "src": "1239:263:3",
              "statements": [
                {
                  "assignments": [
                    411
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 411,
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "scope": 440,
                      "src": "1250:10:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 410,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1250:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 415,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1263:17:3",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 412,
                        "name": "students",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 699,
                        "src": "1263:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Student_$690_storage_$dyn_storage",
                          "typeString": "struct PakbetUseCase.Student storage ref[] storage ref"
                        }
                      },
                      "id": 413,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1263:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1250:30:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 416,
                          "name": "students",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 699,
                          "src": "1301:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Student_$690_storage_$dyn_storage",
                            "typeString": "struct PakbetUseCase.Student storage ref[] storage ref"
                          }
                        },
                        "id": 418,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 417,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 411,
                          "src": "1310:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1301:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Student_$690_storage",
                          "typeString": "struct PakbetUseCase.Student storage ref"
                        }
                      },
                      "id": 419,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "blockChainAccount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 686,
                      "src": "1301:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 420,
                      "name": "_studentAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 407,
                      "src": "1334:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1301:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 422,
                  "nodeType": "ExpressionStatement",
                  "src": "1301:48:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 423,
                        "name": "premiumStudents",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 706,
                        "src": "1360:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 425,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 424,
                        "name": "_studentAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 407,
                        "src": "1376:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1360:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1395:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1360:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 428,
                  "nodeType": "ExpressionStatement",
                  "src": "1360:39:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 429,
                        "name": "addressToStudent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 718,
                        "src": "1410:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 431,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 430,
                        "name": "_studentAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 407,
                        "src": "1427:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1410:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 432,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 411,
                      "src": "1446:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1410:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 434,
                  "nodeType": "ExpressionStatement",
                  "src": "1410:38:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 436,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 411,
                        "src": "1475:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 437,
                        "name": "_studentAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 407,
                        "src": "1479:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 435,
                      "name": "NewStudent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "1464:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1464:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 439,
                  "nodeType": "EmitStatement",
                  "src": "1459:36:3"
                }
              ]
            },
            "documentation": null,
            "id": 441,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_enrollStudent",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 407,
                  "name": "_studentAccount",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "1205:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 406,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1205:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1204:25:3"
            },
            "returnParameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1239:0:3"
            },
            "scope": 442,
            "src": "1181:321:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 443,
        "src": "64:1441:3"
      }
    ],
    "src": "0:2847:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0xcbb28b3e1f77d025889ab5d1e72a2eca69e6105bc36f0044122e59c55f40e18f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "issuerAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "title",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "description",
              "type": "string"
            }
          ],
          "name": "NewTemplate",
          "type": "event",
          "signature": "0xcbb28b3e1f77d025889ab5d1e72a2eca69e6105bc36f0044122e59c55f40e18f"
        },
        "0x35445dd7684af4d0b1828f42019bd59ce22b71771e931983dfe04d5eb270afd8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "hashCode",
              "type": "bytes32"
            }
          ],
          "name": "NewCertificate",
          "type": "event",
          "signature": "0x35445dd7684af4d0b1828f42019bd59ce22b71771e931983dfe04d5eb270afd8"
        },
        "0x1954ac83e537c0e756ec6df543e27af81f396a50b2f00ef7cc521308d3cba1f4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "hashCode",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "name": "student",
              "type": "address"
            }
          ],
          "name": "NewPremiumCertificate",
          "type": "event",
          "signature": "0x1954ac83e537c0e756ec6df543e27af81f396a50b2f00ef7cc521308d3cba1f4"
        },
        "0xaf49f6e647e48528a5c4c0a5801947007b7fa9744c066de10b2f7e747754bf1d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "issuerId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "name",
              "type": "string"
            }
          ],
          "name": "NewIssuer",
          "type": "event",
          "signature": "0xaf49f6e647e48528a5c4c0a5801947007b7fa9744c066de10b2f7e747754bf1d"
        },
        "0x76d881824e81c30f0d2ea36f999b13c9d258bc821dc2d29a17eb8ba7f95c275b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "student",
              "type": "address"
            }
          ],
          "name": "NewStudent",
          "type": "event",
          "signature": "0x76d881824e81c30f0d2ea36f999b13c9d258bc821dc2d29a17eb8ba7f95c275b"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        }
      },
      "links": {},
      "address": "0x02C43c243e89d7D42a1237EF1EC015E1cDb5d1FD",
      "transactionHash": "0xce71069f679ff33d0840e8f8da35ce737790a1da6950af7cd61c63deced5d5df"
    }
  },
  "schemaVersion": "3.0.18",
  "updatedAt": "2019-11-09T07:34:02.337Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "accreditIssuer(address,string)": {
        "details": "Only the owner of the smart contract account can call this function. \r",
        "params": {
          "_issuerAddress": "Blockchain Address associated to the training institution.\r",
          "_name": "Name of the training institution.\r"
        }
      },
      "awardPublicCertificates(uint256,bytes32,address)": {
        "params": {
          "_hashCode": "the resulting value when pdf is hashed.\r",
          "_studentAddress": "Blockchain Address associated to the student.\r",
          "_templateId": "uint256 value corresponding to the index position of template in the templates[] array.\r"
        }
      },
      "awardRegularCertificate(bytes32)": {
        "details": "Record the hash value of the pdf document to the blockchain account.\r",
        "params": {
          "_hashCode": "the resulting value when pdf is hashed.\r"
        },
        "return": "true if awarding of certificate is good, false if awarding of certificate fails.\r"
      },
      "createTemplate(string,string)": {
        "details": "Only account in the issuer[] array can call this function.\r",
        "params": {
          "_description": "certificate description e.g. BTA Expert Program\r",
          "_title": "certificate description e.g. Certificate of Attendance.\r"
        }
      },
      "deActivateIssuerById(uint256)": {
        "params": {
          "_index": "uint256 value corresponding to the index position of the training institution\r in the issuers[] array.\r"
        }
      },
      "enrollStudent(address)": {
        "details": "Only accredited account can call this function. \r",
        "params": {
          "_studentAddress": "Blockchain Address associated to the student.\r"
        }
      },
      "getIssuedTemplates(uint256)": {
        "params": {
          "_id": "uint256 value corresponding to the index position of the training institution\r"
        },
        "return": "an array containing the template ids created template by the institution \r"
      },
      "getStudentCertificates(uint256)": {
        "params": {
          "_id": "uint256 value corresponding to the index position of the student\r in the students[] array.\r"
        },
        "return": "an array containing the certificate ids owned by the student.\r"
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract.\r"
      },
      "owner()": {
        "return": "the address of the owner.\r"
      },
      "reActivateIssuerById(uint256)": {
        "params": {
          "_index": "uint256 value corresponding to the index position of the training institution\r in the issuers[] array.\r"
        }
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract.\r"
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
        "params": {
          "newOwner": "The address to transfer ownership to.\r"
        }
      },
      "validateRegularCertificate(bytes32)": {
        "params": {
          "_hashCode": "the resulting value when pdf is hashed.\r"
        },
        "return": "true if Certificate exist in the blockchain, false if not.\r"
      }
    }
  },
  "userdoc": {
    "methods": {
      "accreditIssuer(address,string)": {
        "notice": "Add training institution to the blockchain.\r"
      },
      "awardRegularCertificate(bytes32)": {
        "notice": "Only accredited account can call this function.\r"
      },
      "createTemplate(string,string)": {
        "notice": "Creates blank certificates which will become basis for certificates\r to be issued.\r"
      },
      "deActivateIssuerById(uint256)": {
        "notice": "Prevent a training institution from creating and awarding certificates.\r"
      },
      "enrollStudent(address)": {
        "notice": "Add student to the blockchain.\r"
      },
      "reActivateIssuerById(uint256)": {
        "notice": "Allows a training institution from creating and awarding certificates.\r"
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner.\r It will not be possible to call the functions with the `onlyOwner`\r modifier anymore.\r"
      }
    }
  }
}